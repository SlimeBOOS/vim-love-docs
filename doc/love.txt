*love.txt*	Documentation for the LOVE game engine version 0.10.1

                        _       o__o __      __ ______                        
                       | |     / __ \\ \    / /|  ____|                       
                       | |    | |  | |\ \  / / | |__                          
                       | |    | |  | | \ \/ /  |  __|                         
                       | |____| |__| |  \  /   | |____                        
                       |______|\____/    \/    |______|                       

                   The complete solution for Vim with LOVE.                   
                   Includes highlighting and documentation.                   



==============================================================================
CONTENT                                                         *love-content*

    1. Modules............................... |love-modules|
        1.1. love............................ |love-love|
            1.1.1. getVersion................ |love-getVersion|
        1.2. audio........................... |love-audio|
            1.2.1. getDistanceModel.......... |love-audio-getDistanceModel|
            1.2.2. getDopplerScale........... |love-audio-getDopplerScale|
            1.2.3. getSourceCount............ |love-audio-getSourceCount|
            1.2.4. getOrientation............ |love-audio-getOrientation|
            1.2.5. getPosition............... |love-audio-getPosition|
            1.2.6. getVelocity............... |love-audio-getVelocity|
            1.2.7. getVolume................. |love-audio-getVolume|
            1.2.8. newSource................. |love-audio-newSource|
            1.2.9. pause..................... |love-audio-pause|
            1.2.10. play..................... |love-audio-play|
            1.2.11. resume................... |love-audio-resume|
            1.2.12. rewind................... |love-audio-rewind|
            1.2.13. setDistanceModel......... |love-audio-setDistanceModel|
            1.2.14. setDopplerScale.......... |love-audio-setDopplerScale|
            1.2.15. setOrientation........... |love-audio-setOrientation|
            1.2.16. setPosition.............. |love-audio-setPosition|
            1.2.17. setVelocity.............. |love-audio-setVelocity|
            1.2.18. setVolume................ |love-audio-setVolume|
            1.2.19. stop..................... |love-audio-stop|
        1.3. event........................... |love-event|
            1.3.1. clear..................... |love-event-clear|
            1.3.2. poll...................... |love-event-poll|
            1.3.3. pump...................... |love-event-pump|
            1.3.4. push...................... |love-event-push|
            1.3.5. quit...................... |love-event-quit|
            1.3.6. wait...................... |love-event-wait|
        1.4. filesystem...................... |love-filesystem|
            1.4.1. append.................... |love-filesystem-append|
            1.4.2. areSymlinksEnabled........ |love-filesystem-areSymlinksEnabled|
            1.4.3. createDirectory........... |love-filesystem-createDirectory|
            1.4.4. exists.................... |love-filesystem-exists|
            1.4.5. getAppdataDirectory....... |love-filesystem-getAppdataDirectory|
            1.4.6. getDirectoryItems......... |love-filesystem-getDirectoryItems|
            1.4.7. getIdentity............... |love-filesystem-getIdentity|
            1.4.8. getLastModified........... |love-filesystem-getLastModified|
            1.4.9. getRealDirectory.......... |love-filesystem-getRealDirectory|
            1.4.10. getRequirePath........... |love-filesystem-getRequirePath|
            1.4.11. getSaveDirectory......... |love-filesystem-getSaveDirectory|
            1.4.12. getSize.................. |love-filesystem-getSize|
            1.4.13. getSourceBaseDirectory... |love-filesystem-getSourceBaseDirectory|
            1.4.14. getUserDirectory......... |love-filesystem-getUserDirectory|
            1.4.15. getWorkingDirectory...... |love-filesystem-getWorkingDirectory|
            1.4.16. isDirectory.............. |love-filesystem-isDirectory|
            1.4.17. isFile................... |love-filesystem-isFile|
            1.4.18. isFused.................. |love-filesystem-isFused|
            1.4.19. isSymlink................ |love-filesystem-isSymlink|
            1.4.20. lines.................... |love-filesystem-lines|
            1.4.21. load..................... |love-filesystem-load|
            1.4.22. mount.................... |love-filesystem-mount|
            1.4.23. newFile.................. |love-filesystem-newFile|
            1.4.24. newFileData.............. |love-filesystem-newFileData|
            1.4.25. read..................... |love-filesystem-read|
            1.4.26. remove................... |love-filesystem-remove|
            1.4.27. setIdentity.............. |love-filesystem-setIdentity|
            1.4.28. setRequirePath........... |love-filesystem-setRequirePath|
            1.4.29. setSource................ |love-filesystem-setSource|
            1.4.30. setSymlinksEnabled....... |love-filesystem-setSymlinksEnabled|
            1.4.31. unmount.................. |love-filesystem-unmount|
            1.4.32. write.................... |love-filesystem-write|
        1.5. graphics........................ |love-graphics|
            1.5.1. arc....................... |love-graphics-arc|
            1.5.2. circle.................... |love-graphics-circle|
            1.5.3. clear..................... |love-graphics-clear|
            1.5.4. discard................... |love-graphics-discard|
            1.5.5. draw...................... |love-graphics-draw|
            1.5.6. ellipse................... |love-graphics-ellipse|
            1.5.7. getBackgroundColor........ |love-graphics-getBackgroundColor|
            1.5.8. getBlendMode.............. |love-graphics-getBlendMode|
            1.5.9. getCanvas................. |love-graphics-getCanvas|
            1.5.10. getCanvasFormats......... |love-graphics-getCanvasFormats|
            1.5.11. getColor................. |love-graphics-getColor|
            1.5.12. getColorMask............. |love-graphics-getColorMask|
            1.5.13. getCompressedImageFormats |love-graphics-getCompressedImageFormats|
            1.5.14. getDefaultFilter......... |love-graphics-getDefaultFilter|
            1.5.15. getDimensions............ |love-graphics-getDimensions|
            1.5.16. getFont.................. |love-graphics-getFont|
            1.5.17. getHeight................ |love-graphics-getHeight|
            1.5.18. getLineJoin.............. |love-graphics-getLineJoin|
            1.5.19. getLineStyle............. |love-graphics-getLineStyle|
            1.5.20. getLineWidth............. |love-graphics-getLineWidth|
            1.5.21. getShader................ |love-graphics-getShader|
            1.5.22. getStats................. |love-graphics-getStats|
            1.5.23. getStencilTest........... |love-graphics-getStencilTest|
            1.5.24. getSupported............. |love-graphics-getSupported|
            1.5.25. getSystemLimits.......... |love-graphics-getSystemLimits|
            1.5.26. getPointSize............. |love-graphics-getPointSize|
            1.5.27. getRendererInfo.......... |love-graphics-getRendererInfo|
            1.5.28. getScissor............... |love-graphics-getScissor|
            1.5.29. getWidth................. |love-graphics-getWidth|
            1.5.30. intersectScissor......... |love-graphics-intersectScissor|
            1.5.31. isGammaCorrect........... |love-graphics-isGammaCorrect|
            1.5.32. isWireframe.............. |love-graphics-isWireframe|
            1.5.33. line..................... |love-graphics-line|
            1.5.34. newCanvas................ |love-graphics-newCanvas|
            1.5.35. newFont.................. |love-graphics-newFont|
            1.5.36. newMesh.................. |love-graphics-newMesh|
            1.5.37. newImage................. |love-graphics-newImage|
            1.5.38. newImageFont............. |love-graphics-newImageFont|
            1.5.39. newParticleSystem........ |love-graphics-newParticleSystem|
            1.5.40. newShader................ |love-graphics-newShader|
            1.5.41. newText.................. |love-graphics-newText|
            1.5.42. newQuad.................. |love-graphics-newQuad|
            1.5.43. newScreenshot............ |love-graphics-newScreenshot|
            1.5.44. newSpriteBatch........... |love-graphics-newSpriteBatch|
            1.5.45. newVideo................. |love-graphics-newVideo|
            1.5.46. origin................... |love-graphics-origin|
            1.5.47. points................... |love-graphics-points|
            1.5.48. polygon.................. |love-graphics-polygon|
            1.5.49. pop...................... |love-graphics-pop|
            1.5.50. present.................. |love-graphics-present|
            1.5.51. print.................... |love-graphics-print|
            1.5.52. printf................... |love-graphics-printf|
            1.5.53. push..................... |love-graphics-push|
            1.5.54. rectangle................ |love-graphics-rectangle|
            1.5.55. reset.................... |love-graphics-reset|
            1.5.56. rotate................... |love-graphics-rotate|
            1.5.57. scale.................... |love-graphics-scale|
            1.5.58. setBackgroundColor....... |love-graphics-setBackgroundColor|
            1.5.59. setBlendMode............. |love-graphics-setBlendMode|
            1.5.60. setCanvas................ |love-graphics-setCanvas|
            1.5.61. setColor................. |love-graphics-setColor|
            1.5.62. setColorMask............. |love-graphics-setColorMask|
            1.5.63. setDefaultFilter......... |love-graphics-setDefaultFilter|
            1.5.64. setFont.................. |love-graphics-setFont|
            1.5.65. setLineJoin.............. |love-graphics-setLineJoin|
            1.5.66. setLineStyle............. |love-graphics-setLineStyle|
            1.5.67. setLineWidth............. |love-graphics-setLineWidth|
            1.5.68. setNewFont............... |love-graphics-setNewFont|
            1.5.69. setShader................ |love-graphics-setShader|
            1.5.70. setPointSize............. |love-graphics-setPointSize|
            1.5.71. setScissor............... |love-graphics-setScissor|
            1.5.72. setStencilTest........... |love-graphics-setStencilTest|
            1.5.73. setWireframe............. |love-graphics-setWireframe|
            1.5.74. shear.................... |love-graphics-shear|
            1.5.75. stencil.................. |love-graphics-stencil|
            1.5.76. translate................ |love-graphics-translate|
        1.6. image........................... |love-image|
            1.6.1. isCompressed.............. |love-image-isCompressed|
            1.6.2. newCompressedData......... |love-image-newCompressedData|
            1.6.3. newImageData.............. |love-image-newImageData|
        1.7. joystick........................ |love-joystick|
            1.7.1. getJoystickCount.......... |love-joystick-getJoystickCount|
            1.7.2. getJoysticks.............. |love-joystick-getJoysticks|
            1.7.3. loadGamepadMappings....... |love-joystick-loadGamepadMappings|
            1.7.4. saveGamepadMappings....... |love-joystick-saveGamepadMappings|
            1.7.5. setGamepadMapping......... |love-joystick-setGamepadMapping|
        1.8. keyboard........................ |love-keyboard|
            1.8.1. getKeyFromScancode........ |love-keyboard-getKeyFromScancode|
            1.8.2. getScancodeFromKey........ |love-keyboard-getScancodeFromKey|
            1.8.3. hasKeyRepeat.............. |love-keyboard-hasKeyRepeat|
            1.8.4. hasTextInput.............. |love-keyboard-hasTextInput|
            1.8.5. isDown.................... |love-keyboard-isDown|
            1.8.6. isScancodeDown............ |love-keyboard-isScancodeDown|
            1.8.7. setKeyRepeat.............. |love-keyboard-setKeyRepeat|
            1.8.8. setTextInput.............. |love-keyboard-setTextInput|
        1.9. math............................ |love-math|
            1.9.1. compress.................. |love-math-compress|
            1.9.2. decompress................ |love-math-decompress|
            1.9.3. gammaToLinear............. |love-math-gammaToLinear|
            1.9.4. getRandomSeed............. |love-math-getRandomSeed|
            1.9.5. getRandomState............ |love-math-getRandomState|
            1.9.6. isConvex.................. |love-math-isConvex|
            1.9.7. linearToGamma............. |love-math-linearToGamma|
            1.9.8. newBezierCurve............ |love-math-newBezierCurve|
            1.9.9. newRandomGenerator........ |love-math-newRandomGenerator|
            1.9.10. noise.................... |love-math-noise|
            1.9.11. random................... |love-math-random|
            1.9.12. randomNormal............. |love-math-randomNormal|
            1.9.13. setRandomSeed............ |love-math-setRandomSeed|
            1.9.14. setRandomState........... |love-math-setRandomState|
            1.9.15. triangulate.............. |love-math-triangulate|
        1.10. mouse.......................... |love-mouse|
            1.10.1. getCursor................ |love-mouse-getCursor|
            1.10.2. getPosition.............. |love-mouse-getPosition|
            1.10.3. getRelativeMode.......... |love-mouse-getRelativeMode|
            1.10.4. getSystemCursor.......... |love-mouse-getSystemCursor|
            1.10.5. getX..................... |love-mouse-getX|
            1.10.6. getY..................... |love-mouse-getY|
            1.10.7. hasCursor................ |love-mouse-hasCursor|
            1.10.8. isDown................... |love-mouse-isDown|
            1.10.9. isGrabbed................ |love-mouse-isGrabbed|
            1.10.10. isVisible............... |love-mouse-isVisible|
            1.10.11. newCursor............... |love-mouse-newCursor|
            1.10.12. setCursor............... |love-mouse-setCursor|
            1.10.13. setGrabbed.............. |love-mouse-setGrabbed|
            1.10.14. setPosition............. |love-mouse-setPosition|
            1.10.15. setRelativeMode......... |love-mouse-setRelativeMode|
            1.10.16. setVisible.............. |love-mouse-setVisible|
            1.10.17. setX.................... |love-mouse-setX|
            1.10.18. setY.................... |love-mouse-setY|
        1.11. physics........................ |love-physics|
            1.11.1. getDistance.............. |love-physics-getDistance|
            1.11.2. getMeter................. |love-physics-getMeter|
            1.11.3. newBody.................. |love-physics-newBody|
            1.11.4. newChainShape............ |love-physics-newChainShape|
            1.11.5. newCircleShape........... |love-physics-newCircleShape|
            1.11.6. newDistanceJoint......... |love-physics-newDistanceJoint|
            1.11.7. newEdgeShape............. |love-physics-newEdgeShape|
            1.11.8. newFixture............... |love-physics-newFixture|
            1.11.9. newFrictionJoint......... |love-physics-newFrictionJoint|
            1.11.10. newGearJoint............ |love-physics-newGearJoint|
            1.11.11. newMotorJoint........... |love-physics-newMotorJoint|
            1.11.12. newMouseJoint........... |love-physics-newMouseJoint|
            1.11.13. newPolygonShape......... |love-physics-newPolygonShape|
            1.11.14. newPrismaticJoint....... |love-physics-newPrismaticJoint|
            1.11.15. newPulleyJoint.......... |love-physics-newPulleyJoint|
            1.11.16. newRectangleShape....... |love-physics-newRectangleShape|
            1.11.17. newRevoluteJoint........ |love-physics-newRevoluteJoint|
            1.11.18. newRopeJoint............ |love-physics-newRopeJoint|
            1.11.19. newWeldJoint............ |love-physics-newWeldJoint|
            1.11.20. newWheelJoint........... |love-physics-newWheelJoint|
            1.11.21. newWorld................ |love-physics-newWorld|
            1.11.22. setMeter................ |love-physics-setMeter|
        1.12. sound.......................... |love-sound|
            1.12.1. newDecoder............... |love-sound-newDecoder|
            1.12.2. newSoundData............. |love-sound-newSoundData|
        1.13. system......................... |love-system|
            1.13.1. getClipboardText......... |love-system-getClipboardText|
            1.13.2. getOS.................... |love-system-getOS|
            1.13.3. getPowerInfo............. |love-system-getPowerInfo|
            1.13.4. getProcessorCount........ |love-system-getProcessorCount|
            1.13.5. openURL.................. |love-system-openURL|
            1.13.6. setClipboardText......... |love-system-setClipboardText|
            1.13.7. vibrate.................. |love-system-vibrate|
        1.14. thread......................... |love-thread|
            1.14.1. getChannel............... |love-thread-getChannel|
            1.14.2. newChannel............... |love-thread-newChannel|
            1.14.3. newThread................ |love-thread-newThread|
        1.15. timer.......................... |love-timer|
            1.15.1. getAverageDelta.......... |love-timer-getAverageDelta|
            1.15.2. getDelta................. |love-timer-getDelta|
            1.15.3. getFPS................... |love-timer-getFPS|
            1.15.4. getTime.................. |love-timer-getTime|
            1.15.5. sleep.................... |love-timer-sleep|
            1.15.6. step..................... |love-timer-step|
        1.16. touch.......................... |love-touch|
            1.16.1. getPosition.............. |love-touch-getPosition|
            1.16.2. getPressure.............. |love-touch-getPressure|
            1.16.3. getTouches............... |love-touch-getTouches|
        1.17. video.......................... |love-video|
            1.17.1. newVideoStream........... |love-video-newVideoStream|
        1.18. window......................... |love-window|
            1.18.1. close.................... |love-window-close|
            1.18.2. fromPixels............... |love-window-fromPixels|
            1.18.3. getDisplayName........... |love-window-getDisplayName|
            1.18.4. getFullscreen............ |love-window-getFullscreen|
            1.18.5. getFullscreenModes....... |love-window-getFullscreenModes|
            1.18.6. getIcon.................. |love-window-getIcon|
            1.18.7. getMode.................. |love-window-getMode|
            1.18.8. getPixelScale............ |love-window-getPixelScale|
            1.18.9. getPosition.............. |love-window-getPosition|
            1.18.10. getTitle................ |love-window-getTitle|
            1.18.11. hasFocus................ |love-window-hasFocus|
            1.18.12. hasMouseFocus........... |love-window-hasMouseFocus|
            1.18.13. isCreated............... |love-window-isCreated|
            1.18.14. isDisplaySleepEnabled... |love-window-isDisplaySleepEnabled|
            1.18.15. isVisible............... |love-window-isVisible|
            1.18.16. maximize................ |love-window-maximize|
            1.18.17. minimize................ |love-window-minimize|
            1.18.18. requestAttention........ |love-window-requestAttention|
            1.18.19. setDisplaySleepEnabled.. |love-window-setDisplaySleepEnabled|
            1.18.20. setFullscreen........... |love-window-setFullscreen|
            1.18.21. setIcon................. |love-window-setIcon|
            1.18.22. setMode................. |love-window-setMode|
            1.18.23. setPosition............. |love-window-setPosition|
            1.18.24. setTitle................ |love-window-setTitle|
            1.18.25. showMessageBox.......... |love-window-showMessageBox|
            1.18.26. toPixels................ |love-window-toPixels|

==============================================================================
1. Modules                                                      *love-modules*

The modules for LOVE, i.e. love.graphics

------------------------------------------------------------------------------
1.1. love                                                          *love-love*

General functions

- Types: None
- Enums: None

------------------------------------------------------------------------------
1.1.1. getVersion                                            *love-getVersion*

- Variants:
    - 1:
        - Returns:
            - major: <number> The major version of LÖVE, i.e. 0 for version 
              0.9.1.
            - minor: <number> The minor version of LÖVE, i.e. 9 for version 
              0.9.1.
            - revision: <number> The revision version of LÖVE, i.e. 1 for 
              version 0.9.1.
            - codename: <string> The codename of the current version, i.e. 
              "Baby Inspector" for version 0.9.1.
        - Arguments: None

------------------------------------------------------------------------------
1.2. audio                                                        *love-audio*

Provides an interface to create noise with the user's speakers.

- Types: 
    - Source                                                     *love-Source*
- Enums: 
    - DistanceModel                                       *love-DistanceModel*
    - SourceType                                             *love-SourceType*
    - TimeUnit                                                 *love-TimeUnit*

------------------------------------------------------------------------------
1.2.1. getDistanceModel                          *love-audio-getDistanceModel*

- Variants:
    - 1:
        - Returns:
            - model: <DistanceModel> The current distance model. The default 
              is 'inverseclamped'.
        - Arguments: None

------------------------------------------------------------------------------
1.2.2. getDopplerScale                            *love-audio-getDopplerScale*

- Variants:
    - 1:
        - Returns:
            - scale: <number> The current doppler scale factor.
        - Arguments: None

------------------------------------------------------------------------------
1.2.3. getSourceCount                              *love-audio-getSourceCount*

- Variants:
    - 1:
        - Returns:
            - numSources: <number> The number of sources which are currently 
              playing or paused.
        - Arguments: None

------------------------------------------------------------------------------
1.2.4. getOrientation                              *love-audio-getOrientation*

- Variants:
    - 1:
        - Returns:
            - fx: <number> The X component of the forward vector of the 
              listener orientation.
            - fy: <number> The Y component of the forward vector of the 
              listener orientation.
            - fz: <number> The Z component of the forward vector of the 
              listener orientation.
            - ux: <number> The X component of the up vector of the listener 
              orientation.
            - uy: <number> The Y component of the up vector of the listener 
              orientation.
            - uz: <number> The Z component of the up vector of the listener 
              orientation.
        - Arguments: None

------------------------------------------------------------------------------
1.2.5. getPosition                                    *love-audio-getPosition*

- Variants:
    - 1:
        - Returns:
            - x: <number> The X position of the listener.
            - y: <number> The Y position of the listener.
            - z: <number> The Z position of the listener.
        - Arguments: None

------------------------------------------------------------------------------
1.2.6. getVelocity                                    *love-audio-getVelocity*

- Variants:
    - 1:
        - Returns:
            - x: <number> The X velocity of the listener.
            - y: <number> The Y velocity of the listener.
            - z: <number> The Z velocity of the listener.
        - Arguments: None

------------------------------------------------------------------------------
1.2.7. getVolume                                        *love-audio-getVolume*

- Variants:
    - 1:
        - Returns:
            - volume: <number> The current master volume.
        - Arguments: None

------------------------------------------------------------------------------
1.2.8. newSource                                        *love-audio-newSource*

- Variants:
    - 1:
        - Returns:
            - source: <Source> A new Source that can play the specified 
              audio.
        - Arguments:
            - filename: <string> The filepath to create a Source from.
            - type: <SourceType> Streaming or static source.
    - 2:
        - Returns:
            - source: <Source> A new Source that can play the specified 
              audio.
        - Arguments:
            - file: <File> A File pointing to an audio file.
            - type: <SourceType> Streaming or static source.
    - 3:
        - Returns:
            - source: <Source> A new Source that can play the specified 
              audio.
        - Arguments:
            - decoder: <Decoder> The Decoder to create a Source from.
            - type: <SourceType> Streaming or static source.
    - 4:
        - Returns:
            - source: <Source> A new Source that can play the specified 
              audio. The SourceType of the returned audio is "static".
        - Arguments:
            - soundData: <SoundData> The SoundData to create a Source from.
    - 5:
        - Returns:
            - source: <Source> A new Source that can play the specified 
              audio.
        - Arguments:
            - fileData: <FileData> The FileData to create a Source from.

------------------------------------------------------------------------------
1.2.9. pause                                                *love-audio-pause*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - source: <Source> The source on which to pause the playback.

------------------------------------------------------------------------------
1.2.10. play                                                 *love-audio-play*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - source: <Source> The Source to play.

------------------------------------------------------------------------------
1.2.11. resume                                             *love-audio-resume*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - source: <Source> The source on which to resume the playback.

------------------------------------------------------------------------------
1.2.12. rewind                                             *love-audio-rewind*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - source: <Source> The source to rewind.

------------------------------------------------------------------------------
1.2.13. setDistanceModel                         *love-audio-setDistanceModel*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - model: <DistanceModel> The new distance model.

------------------------------------------------------------------------------
1.2.14. setDopplerScale                           *love-audio-setDopplerScale*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - scale: <number> The new doppler scale factor. The scale must be 
              greater than 0.

------------------------------------------------------------------------------
1.2.15. setOrientation                             *love-audio-setOrientation*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - fx: <number> The X component of the forward vector of the 
              listener orientation.
            - fy: <number> The Y component of the forward vector of the 
              listener orientation.
            - fz: <number> The Z component of the forward vector of the 
              listener orientation.
            - ux: <number> The X component of the up vector of the listener 
              orientation.
            - uy: <number> The Y component of the up vector of the listener 
              orientation.
            - uz: <number> The Z component of the up vector of the listener 
              orientation.

------------------------------------------------------------------------------
1.2.16. setPosition                                   *love-audio-setPosition*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The X position of the listener.
            - y: <number> The Y position of the listener.
            - z: <number> The Z position of the listener.

------------------------------------------------------------------------------
1.2.17. setVelocity                                   *love-audio-setVelocity*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The X velocity of the listener.
            - y: <number> The Y velocity of the listener.
            - z: <number> The Z velocity of the listener.

------------------------------------------------------------------------------
1.2.18. setVolume                                       *love-audio-setVolume*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - volume: <number> 1.0f is max and 0.0f is off.

------------------------------------------------------------------------------
1.2.19. stop                                                 *love-audio-stop*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - source: <Source> The source on which to stop the playback.

------------------------------------------------------------------------------
1.3. event                                                        *love-event*

Manages events, like keypresses.

- Types: None
- Enums: 
    - Event                                                       *love-Event*

------------------------------------------------------------------------------
1.3.1. clear                                                *love-event-clear*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.3.2. poll                                                  *love-event-poll*

- Variants:
    - 1:
        - Returns:
            - i: <function> Iterator function usable in a for loop.
        - Arguments: None

------------------------------------------------------------------------------
1.3.3. pump                                                  *love-event-pump*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.3.4. push                                                  *love-event-push*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - e: <Event> The name of the event.
            - a: <mixed> First event argument.
            - b: <mixed> Second event argument.
            - c: <mixed> Third event argument.
            - d: <mixed> Fourth event argument.

------------------------------------------------------------------------------
1.3.5. quit                                                  *love-event-quit*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - exitstatus: <number> The program exit status to use when 
              closing the application.

------------------------------------------------------------------------------
1.3.6. wait                                                  *love-event-wait*

- Variants:
    - 1:
        - Returns:
            - e: <Event> The type of event.
            - a: <mixed> First event argument.
            - b: <mixed> Second event argument.
            - c: <mixed> Third event argument.
            - d: <mixed> Fourth event argument.
        - Arguments: None

------------------------------------------------------------------------------
1.4. filesystem                                              *love-filesystem*

Provides an interface to the user's filesystem.

- Types: 
    - File                                                         *love-File*
    - FileData                                                 *love-FileData*
- Enums: 
    - BufferMode                                             *love-BufferMode*
    - FileDecoder                                           *love-FileDecoder*
    - FileMode                                                 *love-FileMode*

------------------------------------------------------------------------------
1.4.1. append                                         *love-filesystem-append*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if the operation was successful, or nil 
              if there was an error.
            - errormsg: <string> The error message on failure.
        - Arguments:
            - name: <string> The name (and path) of the file.
            - data: <string> The data that should be written to the file
            - size: <number> How many bytes to write.

------------------------------------------------------------------------------
1.4.2. areSymlinksEnabled                 *love-filesystem-areSymlinksEnabled*

- Variants:
    - 1:
        - Returns:
            - enable: <boolean> Whether love.filesystem follows symbolic 
              links.
        - Arguments: None

------------------------------------------------------------------------------
1.4.3. createDirectory                       *love-filesystem-createDirectory*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if the directory was created, false if 
              not.
        - Arguments:
            - name: <string> The directory to create.

------------------------------------------------------------------------------
1.4.4. exists                                         *love-filesystem-exists*

- Variants:
    - 1:
        - Returns:
            - exists: <boolean> True if there is a file or directory with the 
              specified name. False otherwise.
        - Arguments:
            - filename: <string> The path to a potential file or directory.

------------------------------------------------------------------------------
1.4.5. getAppdataDirectory               *love-filesystem-getAppdataDirectory*

- Variants:
    - 1:
        - Returns:
            - path: <string> The path of the application data directory.
        - Arguments: None

------------------------------------------------------------------------------
1.4.6. getDirectoryItems                   *love-filesystem-getDirectoryItems*

- Variants:
    - 1:
        - Returns:
            - items: <table> A sequence with the names of all files and 
              subdirectories as strings.
        - Arguments:
            - dir: <string> The directory.

------------------------------------------------------------------------------
1.4.7. getIdentity                               *love-filesystem-getIdentity*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - name: <string> The identity that is used as write directory.

------------------------------------------------------------------------------
1.4.8. getLastModified                       *love-filesystem-getLastModified*

- Variants:
    - 1:
        - Returns:
            - modtime: <number> The last modification time in seconds since 
              the unix epoch or nil on failure.
            - errormsg: <string> The error message on failure.
        - Arguments:
            - filename: <string> The path and name to a file.

------------------------------------------------------------------------------
1.4.9. getRealDirectory                     *love-filesystem-getRealDirectory*

- Variants:
    - 1:
        - Returns:
            - realdir: <string> The platform-specific full path of the 
              directory containing the filepath.
        - Arguments:
            - filepath: <string> The filepath to get the directory of.

------------------------------------------------------------------------------
1.4.10. getRequirePath                        *love-filesystem-getRequirePath*

- Variants:
    - 1:
        - Returns:
            - paths: <string> The paths that the require function will check 
              in love's filesystem.
        - Arguments: None

------------------------------------------------------------------------------
1.4.11. getSaveDirectory                    *love-filesystem-getSaveDirectory*

- Variants:
    - 1:
        - Returns:
            - path: <string> The absolute path to the save directory.
        - Arguments: None

------------------------------------------------------------------------------
1.4.12. getSize                                      *love-filesystem-getSize*

- Variants:
    - 1:
        - Returns:
            - size: <number> The size in bytes of the file, or nil on 
              failure.
            - errormsg: <string> The error message on failure.
        - Arguments:
            - filename: <string> The path and name to a file.

------------------------------------------------------------------------------
1.4.13. getSourceBaseDirectory        *love-filesystem-getSourceBaseDirectory*

- Variants:
    - 1:
        - Returns:
            - path: <string> The full platform-dependent path of the 
              directory containing the .love file.
        - Arguments: None

------------------------------------------------------------------------------
1.4.14. getUserDirectory                    *love-filesystem-getUserDirectory*

- Variants:
    - 1:
        - Returns:
            - path: <string> The path of the user's directory.
        - Arguments: None

------------------------------------------------------------------------------
1.4.15. getWorkingDirectory              *love-filesystem-getWorkingDirectory*

- Variants:
    - 1:
        - Returns:
            - path: <string> The current working directory.
        - Arguments: None

------------------------------------------------------------------------------
1.4.16. isDirectory                              *love-filesystem-isDirectory*

- Variants:
    - 1:
        - Returns:
            - isDir: <boolean> True if there is a directory with the 
              specified name. False otherwise.
        - Arguments:
            - path: <string> The path to a potential directory.

------------------------------------------------------------------------------
1.4.17. isFile                                        *love-filesystem-isFile*

- Variants:
    - 1:
        - Returns:
            - isFile: <boolean> True if there is a file with the specified 
              name. False otherwise.
        - Arguments:
            - path: <string> The path to a potential file.

------------------------------------------------------------------------------
1.4.18. isFused                                      *love-filesystem-isFused*

- Variants:
    - 1:
        - Returns:
            - fused: <boolean> True if the game is in fused mode, false 
              otherwise.
        - Arguments: None

------------------------------------------------------------------------------
1.4.19. isSymlink                                  *love-filesystem-isSymlink*

- Variants:
    - 1:
        - Returns:
            - symlink: <boolean> True if the path is a symbolic link, false 
              otherwise.
        - Arguments:
            - path: <string> The file or directory path to check.

------------------------------------------------------------------------------
1.4.20. lines                                          *love-filesystem-lines*

- Variants:
    - 1:
        - Returns:
            - iterator: <function> A function that iterates over all the 
              lines in the file.
        - Arguments:
            - name: <string> The name (and path) of the file.

------------------------------------------------------------------------------
1.4.21. load                                            *love-filesystem-load*

- Variants:
    - 1:
        - Returns:
            - chunk: <function> The loaded chunk.
        - Arguments:
            - name: <string> The name (and path) of the file.

------------------------------------------------------------------------------
1.4.22. mount                                          *love-filesystem-mount*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if the archive was successfully 
              mounted, false otherwise.
        - Arguments:
            - archive: <string> The folder or zip file in the game's save 
              directory to mount.
            - mountpoint: <string> The new path the archive will be mounted 
              to.
    - 2:
        - Returns:
            - success: <boolean> True if the archive was successfully 
              mounted, false otherwise.
        - Arguments:
            - archive: <string> The folder or zip file in the game's save 
              directory to mount.
            - mountpoint: <string> The new path the archive will be mounted 
              to.
            - appendToPath: <string> Whether the archive will be searched 
              when reading a filepath before or after already-mounted archives. This 
              includes the game's source and save directories.

------------------------------------------------------------------------------
1.4.23. newFile                                      *love-filesystem-newFile*

- Variants:
    - 1:
        - Returns:
            - file: <File> The new File object, or nil if an error occurred.
            - errorstr: <string> The error string if an error occurred.
        - Arguments:
            - filename: <string> The filename of the file to read.
            - mode: <FileMode> The mode to open the file in.

------------------------------------------------------------------------------
1.4.24. newFileData                              *love-filesystem-newFileData*

- Variants:
    - 1:
        - Returns:
            - data: <FileData> Your new FileData.
        - Arguments:
            - contents: <string> The contents of the file.
            - name: <string> The name of the file.
            - decoder: <FileDecoder> The method to use when decoding the 
              contents.
    - 2:
        - Returns:
            - data: <FileData> The new FileData, or nil if an error occurred.
            - err: <string> The error string, if an error occurred.
        - Arguments:
            - filepath: <string> Path to the file.

------------------------------------------------------------------------------
1.4.25. read                                            *love-filesystem-read*

- Variants:
    - 1:
        - Returns:
            - contents: <string> The file contents.
            - size: <number> How many bytes have been read.
        - Arguments:
            - name: <string> The name (and path) of the file.
            - bytes: <number> How many bytes to read.

------------------------------------------------------------------------------
1.4.26. remove                                        *love-filesystem-remove*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if the file/directory was removed, 
              false otherwise.
        - Arguments:
            - name: <string> The file or directory to remove.

------------------------------------------------------------------------------
1.4.27. setIdentity                              *love-filesystem-setIdentity*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - name: <string> The new identity that will be used as write 
              directory.
            - appendToPath: <boolean> Whether the identity directory will be 
              searched when reading a filepath before or after the game's source directory 
              and any currently mounted archives.

------------------------------------------------------------------------------
1.4.28. setRequirePath                        *love-filesystem-setRequirePath*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - paths: <string> The paths that the require function will check 
              in love's filesystem.

------------------------------------------------------------------------------
1.4.29. setSource                                  *love-filesystem-setSource*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - path: <string> Absolute path to the game's source folder.

------------------------------------------------------------------------------
1.4.30. setSymlinksEnabled                *love-filesystem-setSymlinksEnabled*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - enable: <boolean> Whether love.filesystem should follow 
              symbolic links.

------------------------------------------------------------------------------
1.4.31. unmount                                      *love-filesystem-unmount*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if the archive was successfully 
              unmounted, false otherwise.
        - Arguments:
            - archive: <string> The folder or zip file in the game's save 
              directory which is currently mounted.

------------------------------------------------------------------------------
1.4.32. write                                          *love-filesystem-write*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> If the operation was successful
        - Arguments:
            - name: <string> The name (and path) of the file.
            - data: <string> The data that should be written to the file
            - size: <number> How many bytes to write.

------------------------------------------------------------------------------
1.5. graphics                                                  *love-graphics*

The primary responsibility for the love.graphics module is the drawing of lines, shapes, text, Images and other Drawable objects onto the screen. Its secondary responsibilities include loading external files (including Images and Fonts) into memory, creating specialized objects (such as ParticleSystems or Framebuffers) and managing screen geometry.

LÖVE's coordinate system is rooted in the upper-left corner of the screen, which is at location (0, 0). The x-axis is horizontal: larger values are further to the right. The y-axis is vertical: larger values are further towards the bottom.

In many cases, you draw images or shapes in terms of their upper-left corner (See the picture above).

Many of the functions are used to manipulate the graphics coordinate system, which is essentially the way coordinates are mapped to the display. You can change the position, scale, and even rotation in this way.

- Types: 
    - Canvas                                                     *love-Canvas*
    - Font                                                         *love-Font*
    - Mesh                                                         *love-Mesh*
    - Image                                                       *love-Image*
    - ParticleSystem                                     *love-ParticleSystem*
    - Quad                                                         *love-Quad*
    - Shader                                                     *love-Shader*
    - SpriteBatch                                           *love-SpriteBatch*
    - Text                                                         *love-Text*
    - Texture                                                   *love-Texture*
    - Video                                                       *love-Video*
- Enums: 
    - AlignMode                                               *love-AlignMode*
    - ArcType                                                   *love-ArcType*
    - AreaSpreadDistribution                     *love-AreaSpreadDistribution*
    - BlendAlphaMode                                     *love-BlendAlphaMode*
    - BlendMode                                               *love-BlendMode*
    - CanvasFormat                                         *love-CanvasFormat*
    - CompareMode                                           *love-CompareMode*
    - DrawMode                                                 *love-DrawMode*
    - FilterMode                                             *love-FilterMode*
    - GraphicsFeature                                   *love-GraphicsFeature*
    - GraphicsLimit                                       *love-GraphicsLimit*
    - LineJoin                                                 *love-LineJoin*
    - LineStyle                                               *love-LineStyle*
    - MeshDrawMode                                         *love-MeshDrawMode*
    - ParticleInsertMode                             *love-ParticleInsertMode*
    - PointStyle                                             *love-PointStyle*
    - SpriteBatchUsage                                 *love-SpriteBatchUsage*
    - StackType                                               *love-StackType*
    - StencilAction                                       *love-StencilAction*
    - WrapMode                                                 *love-WrapMode*

------------------------------------------------------------------------------
1.5.1. arc                                                 *love-graphics-arc*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - drawmode: <DrawMode> How to draw the arc.
            - x: <number> The position of the center along x-axis.
            - y: <number> The position of the center along y-axis.
            - radius: <number> Radius of the arc.
            - angle1: <number> The angle at which the arc begins.
            - angle2: <number> The angle at which the arc terminates.
            - segments: <number> The number of segments used for drawing the 
              arc.
    - 2:
        - Returns: Nothing
        - Arguments:
            - drawmode: <DrawMode> How to draw the arc.
            - arctype: <ArcType> The type of arc to draw.
            - x: <number> The position of the center along x-axis.
            - y: <number> The position of the center along y-axis.
            - radius: <number> Radius of the arc.
            - angle1: <number> The angle at which the arc begins.
            - angle2: <number> The angle at which the arc terminates.
            - segments: <number> The number of segments used for drawing the 
              arc.

------------------------------------------------------------------------------
1.5.2. circle                                           *love-graphics-circle*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the circle.
            - x: <number> The position of the center along x-axis.
            - y: <number> The position of the center along y-axis.
            - radius: <number> The radius of the circle.
            - segments: <number> The number of segments used for drawing the 
              circle.

------------------------------------------------------------------------------
1.5.3. clear                                             *love-graphics-clear*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - r: <number> The red channel of the color to clear the screen 
              to.
            - g: <number> The green channel of the color to clear the screen 
              to.
            - b: <number> The blue channel of the color to clear the screen 
              to.
            - a: <number> The alpha channel of the color to clear the screen 
              to.
    - 3:
        - Returns: Nothing
        - Arguments:
            - color: <table> A table in the form of {r, g, b, a} containing 
              the color to clear the first active Canvas to.
            - ...: <table> Additional tables for each active Canvas.

------------------------------------------------------------------------------
1.5.4. discard                                         *love-graphics-discard*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - discardcolor: <boolean> Whether to discard the texture(s) of 
              the active Canvas(es) (the contents of the screen if no Canvas is active).
            - discardstencil: <boolean> Whether to discard the contents of 
              the stencil buffer of the screen / active Canvas.
    - 2:
        - Returns: Nothing
        - Arguments:
            - discardcolors: <table> An array containing boolean values 
              indicating whether to discard the texture of each active Canvas, when 
              multiple simultaneous Canvases are active.
            - discardstencil: <boolean> Whether to discard the contents of 
              the stencil buffer of the screen / active Canvas.

------------------------------------------------------------------------------
1.5.5. draw                                               *love-graphics-draw*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - drawable: <Drawable> A drawable object.
            - x: <number> The position to draw the object (x-axis).
            - y: <number> The position to draw the object (y-axis).
            - r: <number> Orientation (radians).
            - sx: <number> Scale factor (x-axis). Can be negative.
            - sy: <number> Scale factor (y-axis). Can be negative.
            - ox: <number> Origin offset (x-axis). (A value of 20 would 
              effectively move your drawable object 20 pixels to the left.)
            - oy: <number> Origin offset (y-axis). (A value of 20 would 
              effectively move your drawable object 20 pixels up.)
            - kx: <number> Shearing factor (x-axis).
            - ky: <number> Shearing factor (y-axis).
    - 2:
        - Returns: Nothing
        - Arguments:
            - texture: <Texture> A Texture (Image or Canvas) to texture the 
              Quad with.
            - quad: <Quad> The Quad to draw on screen.
            - x: <number> The position to draw the object (x-axis).
            - y: <number> The position to draw the object (y-axis).
            - r: <number> Orientation (radians).
            - sx: <number> Scale factor (x-axis). Can be negative.
            - sy: <number> Scale factor (y-axis). Can be negative.
            - ox: <number> Origin offset (x-axis).
            - oy: <number> Origin offset (y-axis)
            - kx: <number> Shearing factor (x-axis).
            - ky: <number> Shearing factor (y-axis).

------------------------------------------------------------------------------
1.5.6. ellipse                                         *love-graphics-ellipse*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the ellipse.
            - x: <number> The position of the center along x-axis.
            - y: <number> The position of the center along y-axis.
            - radiusx: <number> The radius of the ellipse along the x-axis 
              (half the ellipse's width.)
            - radiusy: <number> The radius of the ellipse along the y-axis 
              (half the ellipse's height.)
    - 2:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the ellipse.
            - x: <number> The position of the center along x-axis.
            - y: <number> The position of the center along y-axis.
            - radiusx: <number> The radius of the ellipse along the x-axis 
              (half the ellipse's width.)
            - radiusy: <number> The radius of the ellipse along the y-axis 
              (half the ellipse's height.)
            - segments: <number> The number of segments used for drawing the 
              ellipse.

------------------------------------------------------------------------------
1.5.7. getBackgroundColor                   *love-graphics-getBackgroundColor*

- Variants:
    - 1:
        - Returns:
            - r: <number> The red component (0-255).
            - g: <number> The green component (0-255).
            - b: <number> The blue component (0-255).
            - a: <number> The alpha component (0-255).
        - Arguments: None

------------------------------------------------------------------------------
1.5.8. getBlendMode                               *love-graphics-getBlendMode*

- Variants:
    - 1:
        - Returns:
            - mode: <BlendMode> The current blend mode.
            - alphamode: <BlendAlphaMode> The current blend alpha mode – it 
              determines how the alpha of drawn objects affects blending.
        - Arguments: None

------------------------------------------------------------------------------
1.5.9. getCanvas                                     *love-graphics-getCanvas*

- Variants:
    - 1:
        - Returns:
            - canvas: <Canvas> The Canvas set by setCanvas. Returns nil if 
              drawing to the real screen.
        - Arguments: None

------------------------------------------------------------------------------
1.5.10. getCanvasFormats                      *love-graphics-getCanvasFormats*

- Variants:
    - 1:
        - Returns:
            - formats: <table> A table containing CanvasFormats as keys, and 
              a boolean indicating whether the format is supported as values. Not all 
              systems support all formats.
        - Arguments: None

------------------------------------------------------------------------------
1.5.11. getColor                                      *love-graphics-getColor*

- Variants:
    - 1:
        - Returns:
            - r: <number> The red component (0-255).
            - g: <number> The red component (0-255).
            - b: <number> The blue component (0-255).
            - a: <number> The alpha component (0-255).
        - Arguments: None

------------------------------------------------------------------------------
1.5.12. getColorMask                              *love-graphics-getColorMask*

- Variants:
    - 1:
        - Returns:
            - r: <boolean> Whether the red color component is active when 
              rendering.
            - g: <boolean> Whether the green color component is active when 
              rendering.
            - b: <boolean> Whether the blue color component is active when 
              rendering.
            - a: <boolean> Whether the alpha color component is active when 
              rendering.
        - Arguments: None

------------------------------------------------------------------------------
1.5.13. getCompressedImageFormats    *love-graphics-getCompressedImageFormats*

- Variants:
    - 1:
        - Returns:
            - formats: <table> A table containing CompressedFormats as keys, 
              and a boolean indicating whether the format is supported as values. Not all 
              systems support all formats.
        - Arguments: None

------------------------------------------------------------------------------
1.5.14. getDefaultFilter                      *love-graphics-getDefaultFilter*

- Variants:
    - 1:
        - Returns:
            - min: <FilterMode> Filter mode used when scaling the image down.
            - mag: <FilterMode> Filter mode used when scaling the image up.
            - anisotropy: <number> Maximum amount of Anisotropic Filtering 
              used.
        - Arguments: None

------------------------------------------------------------------------------
1.5.15. getDimensions                            *love-graphics-getDimensions*

- Variants:
    - 1:
        - Returns:
            - width: <number> The width of the window.
            - height: <number> The height of the window.
        - Arguments: None

------------------------------------------------------------------------------
1.5.16. getFont                                        *love-graphics-getFont*

- Variants:
    - 1:
        - Returns:
            - font: <Font> The current Font, or nil if none is set.
        - Arguments: None

------------------------------------------------------------------------------
1.5.17. getHeight                                    *love-graphics-getHeight*

- Variants:
    - 1:
        - Returns:
            - height: <number> The height of the window.
        - Arguments: None

------------------------------------------------------------------------------
1.5.18. getLineJoin                                *love-graphics-getLineJoin*

- Variants:
    - 1:
        - Returns:
            - join: <LineJoin> The LineJoin style.
        - Arguments: None

------------------------------------------------------------------------------
1.5.19. getLineStyle                              *love-graphics-getLineStyle*

- Variants:
    - 1:
        - Returns:
            - style: <LineStyle> The current line style.
        - Arguments: None

------------------------------------------------------------------------------
1.5.20. getLineWidth                              *love-graphics-getLineWidth*

- Variants:
    - 1:
        - Returns:
            - width: <number> The current line width.
        - Arguments: None

------------------------------------------------------------------------------
1.5.21. getShader                                    *love-graphics-getShader*

- Variants:
    - 1:
        - Returns:
            - shader: <Shader> The current Shader.
        - Arguments: None

------------------------------------------------------------------------------
1.5.22. getStats                                      *love-graphics-getStats*

- Variants:
    - 1:
        - Returns:
            - drawcalls: <number> The number of draw calls made so far during 
              the current frame. This includes all internal draw calls – for example, 
              drawing smooth lines takes two draw calls.
            - canvasswitches: <number> The number of times the active Canvas 
              has been switched so far during the current frame. This includes all internal 
              canvas switches – for example, calling Canvas:clear if the Canvas isn't 
              active will trigger two canvas switches.
            - texturememory: <number> The estimated total size in bytes of 
              video memory used by all loaded Images, Canvases, and Fonts.
            - images: <number> The number of Image objects currently loaded.
            - canvases: <number> The number of Canvas objects currently 
              loaded.
            - fonts: <number> The number of Font objects currently loaded.
        - Arguments: None

------------------------------------------------------------------------------
1.5.23. getStencilTest                          *love-graphics-getStencilTest*

- Variants:
    - 1:
        - Returns:
            - enabled: <boolean> Whether stencil testing is enabled.
            - inverted: <boolean> Whether the stencil test is inverted or 
              not.
        - Arguments: None

------------------------------------------------------------------------------
1.5.24. getSupported                              *love-graphics-getSupported*

- Variants:
    - 1:
        - Returns:
            - features: <table> A table containing GraphicsFeature keys, and 
              boolean values indicating whether each feature is supported.
        - Arguments: None

------------------------------------------------------------------------------
1.5.25. getSystemLimits                        *love-graphics-getSystemLimits*

- Variants:
    - 1:
        - Returns:
            - limits: <table> A table containing GraphicsLimit keys, and 
              number values.
        - Arguments: None

------------------------------------------------------------------------------
1.5.26. getPointSize                              *love-graphics-getPointSize*

- Variants:
    - 1:
        - Returns:
            - size: <number> The current point size.
        - Arguments: None

------------------------------------------------------------------------------
1.5.27. getRendererInfo                        *love-graphics-getRendererInfo*

- Variants:
    - 1:
        - Returns:
            - name: <string> The name of the renderer, e.g. "OpenGL" or 
              "OpenGL ES".
            - version: <string> The version of the renderer with some extra 
              driver-dependent version info, e.g. "2.1 INTEL-8.10.44".
            - vendor: <string> The name of the graphics card vendor, e.g. 
              "Intel Inc".
            - device: <string> The name of the graphics card, e.g. "Intel HD 
              Graphics 3000 OpenGL Engine".
        - Arguments: None

------------------------------------------------------------------------------
1.5.28. getScissor                                  *love-graphics-getScissor*

- Variants:
    - 1:
        - Returns:
            - x: <number> The x component of the top-left point of the box.
            - y: <number> The y component of the top-left point of the box.
            - width: <number> The width of the box.
            - height: <number> The height of the box.
        - Arguments: None

------------------------------------------------------------------------------
1.5.29. getWidth                                      *love-graphics-getWidth*

- Variants:
    - 1:
        - Returns:
            - width: <number> The width of the window.
        - Arguments: None

------------------------------------------------------------------------------
1.5.30. intersectScissor                      *love-graphics-intersectScissor*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The x-coordinate of the upper left corner of the 
              rectangle to intersect with the existing scissor rectangle.
            - y: <number> The y-coordinate of the upper left corner of the 
              rectangle to intersect with the existing scissor rectangle.
            - width: <number> The width of the rectangle to intersect with 
              the existing scissor rectangle.
            - height: <number> The height of the rectangle to intersect with 
              the existing scissor rectangle.

------------------------------------------------------------------------------
1.5.31. isGammaCorrect                          *love-graphics-isGammaCorrect*

- Variants:
    - 1:
        - Returns:
            - gammacorrect: <boolean> True if gamma-correct rendering is 
              supported and was enabled in love.conf, false otherwise.
        - Arguments: None

------------------------------------------------------------------------------
1.5.32. isWireframe                                *love-graphics-isWireframe*

- Variants:
    - 1:
        - Returns:
            - wireframe: <boolean> True if wireframe lines are used when 
              drawing, false if it's not.
        - Arguments: None

------------------------------------------------------------------------------
1.5.33. line                                              *love-graphics-line*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x1: <number> The position of first point on the x-axis.
            - y1: <number> The position of first point on the y-axis.
            - x2: <number> The position of second point on the x-axis.
            - y2: <number> The position of second point on the y-axis.
            - ...: <number> You can continue passing point positions to draw 
              a polyline.
    - 2:
        - Returns: Nothing
        - Arguments:
            - points: <table> A table of point positions.

------------------------------------------------------------------------------
1.5.34. newCanvas                                    *love-graphics-newCanvas*

- Variants:
    - 1:
        - Returns:
            - canvas: <Canvas> A new Canvas object.
        - Arguments:
            - width: <number> The width of the Canvas.
            - height: <number> The height of the Canvas.
            - format: <CanvasFormat> The desired texture mode of the Canvas.
            - msaa: <number> The desired number of antialiasing samples used 
              when drawing to the Canvas.

------------------------------------------------------------------------------
1.5.35. newFont                                        *love-graphics-newFont*

- Variants:
    - 1:
        - Returns:
            - font: <Font> A Font object which can be used to draw text on 
              screen.
        - Arguments:
            - filename: <string> The filepath to the font file.
            - size: <number> The size of the font in pixels.
    - 2:
        - Returns:
            - font: <Font> A Font object which can be used to draw text on 
              screen.
        - Arguments:
            - file: <File> A File pointing to a font.
            - size: <number> The size of the font in pixels.
    - 3:
        - Returns:
            - font: <Font> A Font object which can be used to draw text on 
              screen.
        - Arguments:
            - filedata: <FileData> The encoded data to decode into a font.
            - size: <number> The size of the font in pixels.
    - 4:
        - Returns:
            - font: <Font> A Font object which can be used to draw text on 
              screen.
        - Arguments:
            - size: <number> The size of the font in pixels.

------------------------------------------------------------------------------
1.5.36. newMesh                                        *love-graphics-newMesh*

- Variants:
    - 1:
        - Returns:
            - mesh: <Mesh> The new Mesh.
        - Arguments:
            - vertices: <table> The table filled with vertex information 
              tables for each vertex as follows:
            - mode: <MeshDrawMode> How the vertices are used when drawing. 
              The default mode "fan" is sufficient for simple convex polygons.
            - usage: <SpriteBatchUsage> The expected usage of the Mesh. The 
              specified usage mode affects the Mesh's memory usage and performance.
    - 2:
        - Returns:
            - mesh: <Mesh> The new Mesh.
        - Arguments:
            - vertexcount: <number> The total number of vertices the Mesh 
              will use. Each vertex is initialized to {0,0, 0,0, 255,255,255,255}.
            - mode: <MeshDrawMode> How the vertices are used when drawing. 
              The default mode "fan" is sufficient for simple convex polygons.
            - usage: <SpriteBatchUsage> The expected usage of the Mesh. The 
              specified usage mode affects the Mesh's memory usage and performance.
    - 3:
        - Returns:
            - mesh: <Mesh> The new Mesh.
        - Arguments:
            - vertexformat: <table> A table in the form of {attribute, ...}. 
              Each attribute is a table which specifies a custom vertex attribute used for 
              each vertex.
            - vertices: <table> The table filled with vertex information 
              tables for each vertex, in the form of {vertex, ...} where each vertex is a 
              table in the form of {attributecomponent, ...}.
            - mode: <MeshDrawMode> How the vertices are used when drawing. 
              The default mode "fan" is sufficient for simple convex polygons.
            - usage: <SpriteBatchUsage> The expected usage of the Mesh. The 
              specified usage mode affects the Mesh's memory usage and performance.
    - 4:
        - Returns:
            - mesh: <Mesh> The new Mesh.
        - Arguments:
            - vertexformat: <table> A table in the form of {attribute, ...}. 
              Each attribute is a table which specifies a custom vertex attribute used for 
              each vertex.
            - vertexcount: <number> The total number of vertices the Mesh 
              will use.
            - mode: <MeshDrawMode> How the vertices are used when drawing. 
              The default mode "fan" is sufficient for simple convex polygons.
            - usage: <SpriteBatchUsage> The expected usage of the Mesh. The 
              specified usage mode affects the Mesh's memory usage and performance.

------------------------------------------------------------------------------
1.5.37. newImage                                      *love-graphics-newImage*

- Variants:
    - 1:
        - Returns:
            - image: <Image> An Image object which can be drawn on screen.
        - Arguments:
            - filename: <string> The filepath to the image file.
    - 2:
        - Returns:
            - image: <Image> An Image object which can be drawn on screen.
        - Arguments:
            - imageData: <ImageData> An ImageData object. The Image will use 
              this ImageData to reload itself when love.window.setMode is called.
    - 3:
        - Returns:
            - image: <Image> An Image object which can be drawn on screen.
        - Arguments:
            - compressedImageData: <CompressedImageData> A 
              CompressedImageData object. The Image will use this CompressedImageData to 
              reload itself when love.window.setMode is called.
    - 4:
        - Returns:
            - image: <Image> An Image object which can be drawn on screen.
        - Arguments:
            - filename: <string> The filepath to the image file (or a 
              FileData or ImageData or CompressedImageData object).
            - flags: <table> A table containing the following fields:

------------------------------------------------------------------------------
1.5.38. newImageFont                              *love-graphics-newImageFont*

- Variants:
    - 1:
        - Returns:
            - font: <Font> A Font object which can be used to draw text on 
              screen.
        - Arguments:
            - filename: <string> The filepath to the image file.
            - glyphs: <string> A string of the characters in the image in 
              order from left to right.
            - extraspacing: <number> Additional spacing (positive or 
              negative) to apply to each glyph in the Font.

------------------------------------------------------------------------------
1.5.39. newParticleSystem                    *love-graphics-newParticleSystem*

- Variants:
    - 1:
        - Returns:
            - system: <ParticleSystem> A new ParticleSystem.
        - Arguments:
            - texture: <Texture> The Image or Canvas to use.
            - buffer: <number> The max number of particles at the same time.

------------------------------------------------------------------------------
1.5.40. newShader                                    *love-graphics-newShader*

- Variants:
    - 1:
        - Returns:
            - shader: <Shader> A Shader object for use in drawing operations.
        - Arguments:
            - code: <string> The pixel shader or vertex shader code, or a 
              filename pointing to a file with the code.
    - 2:
        - Returns:
            - shader: <Shader> A Shader object for use in drawing operations.
        - Arguments:
            - pixelcode: <string> The pixel shader code, or a filename 
              pointing to a file with the code.
            - vertexcode: <string> The vertex shader code, or a filename 
              pointing to a file with the code.

------------------------------------------------------------------------------
1.5.41. newText                                        *love-graphics-newText*

- Variants:
    - 1:
        - Returns:
            - text: <Text> The new drawable Text object.
        - Arguments:
            - font: <Font> The font to use for the text.
            - textstring: <string> The initial string of text that the new 
              Text object will contain. May be nil.

------------------------------------------------------------------------------
1.5.42. newQuad                                        *love-graphics-newQuad*

- Variants:
    - 1:
        - Returns:
            - quad: <Quad> The new Quad.
        - Arguments:
            - x: <number> The top-left position along the x-axis.
            - y: <number> The top-left position along the y-axis.
            - width: <number> The width of the Quad.
            - height: <number> The height of the Quad.
            - sw: <number> The reference width, the width of the Image.
            - sh: <number> The reference height, the height of the Image.

------------------------------------------------------------------------------
1.5.43. newScreenshot                            *love-graphics-newScreenshot*

- Variants:
    - 1:
        - Returns:
            - screenshot: <ImageData> The image data of the screenshot.
        - Arguments:
            - copyAlpha: <boolean> Whether to include the screen's alpha 
              channel in the ImageData. If false, the screenshot will be fully opaque.

------------------------------------------------------------------------------
1.5.44. newSpriteBatch                          *love-graphics-newSpriteBatch*

- Variants:
    - 1:
        - Returns:
            - spriteBatch: <SpriteBatch> The new SpriteBatch.
        - Arguments:
            - texture: <Texture> The Image or Canvas to use for the sprites.
            - maxsprites: <number> The max number of sprites.
            - usage: <SpriteBatchUsage> The expected usage of the 
              SpriteBatch. The specified usage mode affects the SpriteBatch's memory usage 
              and performance.

------------------------------------------------------------------------------
1.5.45. newVideo                                      *love-graphics-newVideo*

- Variants:
    - 1:
        - Returns:
            - video: <Video> A new Video.
        - Arguments:
            - filename: <string> The file path to the Ogg Theora video file.
            - loadaudio: <boolean> Whether to try to load the video's audio 
              into an audio Source. If not explicitly set to true or false, it will try 
              without causing an error if the video has no audio.
    - 2:
        - Returns:
            - video: <Video> A new Video.
        - Arguments:
            - videostream: <VideoStream> A video stream object.
            - loadaudio: <boolean> Whether to try to load the video's audio 
              into an audio Source. If not explicitly set to true or false, it will try 
              without causing an error if the video has no audio.

------------------------------------------------------------------------------
1.5.46. origin                                          *love-graphics-origin*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.5.47. points                                          *love-graphics-points*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The position of the first point on the x-axis.
            - y: <number> The position of the first point on the y-axis.
            - ...: <number> The x and y coordinates of additional points.
    - 2:
        - Returns: Nothing
        - Arguments:
            - points: <table> A table containing multiple point positions, in 
              the form of {x, y, ...}.
    - 3:
        - Returns: Nothing
        - Arguments:
            - points: <table> A table containing multiple individually 
              colored points, in the form of {point, ...}. Each table contains the position 
              and color of a point in the form of {x, y, r, g, b, a}. The color components 
              are optional.

------------------------------------------------------------------------------
1.5.48. polygon                                        *love-graphics-polygon*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the polygon.
            - ...: <number> The vertices of the polygon.
    - 2:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the polygon.
            - vertices: <table> The vertices of the polygon as a table.

------------------------------------------------------------------------------
1.5.49. pop                                                *love-graphics-pop*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.5.50. present                                        *love-graphics-present*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.5.51. print                                            *love-graphics-print*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - text: <string> The text to draw.
            - x: <number> The position to draw the object (x-axis).
            - y: <number> The position to draw the object (y-axis).
            - r: <number> Orientation (radians).
            - sx: <number> Scale factor (x-axis).
            - sy: <number> Scale factor (y-axis).
            - ox: <number> Origin offset (x-axis).
            - oy: <number> Origin offset (y-axis).
            - kx: <number> Shear factor (x-axis).
            - ky: <number> Shear factor (y-axis).
    - 2:
        - Returns: Nothing
        - Arguments:
            - coloredtext: <table> A table containing colors and strings to 
              add to the object, in the form of {color1, string1, color2, string2, ...}.
            - x: <number> The position of the new text on the x-axis.
            - y: <number> The position of the new text on the y-axis.
            - angle: <number> The orientation of the object in radians.
            - sx: <number> Scale factor on the x-axis.
            - sy: <number> Scale factor on the y-axis.
            - ox: <number> Origin offset on the x-axis.
            - oy: <number> Origin offset on the y-axis.
            - kx: <number> Shearing / skew factor on the x-axis.
            - ky: <number> Shearing / skew factor on the y-axis.

------------------------------------------------------------------------------
1.5.52. printf                                          *love-graphics-printf*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - text: <string> A text string.
            - x: <number> The position on the x-axis.
            - y: <number> The position on the y-axis.
            - limit: <number> Wrap the line after this many horizontal 
              pixels.
            - align: <AlignMode> The alignment.
            - r: <number> Orientation (radians).
            - sx: <number> Scale factor (x-axis).
            - sy: <number> Scale factor (y-axis).
            - ox: <number> Origin offset (x-axis).
            - oy: <number> Origin offset (y-axis).
            - kx: <number> Shear factor (x-axis).
            - ky: <number> Shear factor (y-axis).
    - 2:
        - Returns: Nothing
        - Arguments:
            - coloredtext: <table> A table containing colors and strings to 
              add to the object, in the form of {color1, string1, color2, string2, ...}.
            - x: <number> The position of the new text on the x-axis.
            - y: <number> The position of the new text on the y-axis.
            - wraplimit: <number> The maximum width in pixels of the text 
              before it gets automatically wrapped to a new line.
            - align: <AlignMode> The alignment of the text.
            - angle: <number> The orientation of the object in radians.
            - sx: <number> Scale factor on the x-axis.
            - sy: <number> Scale factor on the y-axis.
            - ox: <number> Origin offset on the x-axis.
            - oy: <number> Origin offset on the y-axis.
            - kx: <number> Shearing / skew factor on the x-axis.
            - ky: <number> Shearing / skew factor on the y-axis.

------------------------------------------------------------------------------
1.5.53. push                                              *love-graphics-push*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - stack: <StackType> The type of stack to push (e.g. just 
              transformation state, or all love.graphics state).

------------------------------------------------------------------------------
1.5.54. rectangle                                    *love-graphics-rectangle*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the rectangle.
            - x: <number> The position of top-left corner along the x-axis.
            - y: <number> The position of top-left corner along the y-axis.
            - width: <number> Width of the rectangle.
            - height: <number> Height of the rectangle.
    - 2:
        - Returns: Nothing
        - Arguments:
            - mode: <DrawMode> How to draw the rectangle.
            - x: <number> The position of top-left corner along the x-axis.
            - y: <number> The position of top-left corner along the y-axis.
            - width: <number> Width of the rectangle.
            - height: <number> Height of the rectangle.
            - rx: <number> The x-axis radius of each round corner. Cannot be 
              greater than half the rectangle's width.
            - ry: <number> The y-axis radius of each round corner. Cannot be 
              greater than half the rectangle's height.
            - segments: <number> The number of segments used for drawing the 
              round corners. A default amount will be chosen if no number is given.

------------------------------------------------------------------------------
1.5.55. reset                                            *love-graphics-reset*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.5.56. rotate                                          *love-graphics-rotate*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - angle: <number> The amount to rotate the coordinate system in 
              radians.

------------------------------------------------------------------------------
1.5.57. scale                                            *love-graphics-scale*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - sx: <number> The scaling in the direction of the x-axis.
            - sy: <number> The scaling in the direction of the y-axis. If 
              omitted, it defaults to same as parameter sx.

------------------------------------------------------------------------------
1.5.58. setBackgroundColor                  *love-graphics-setBackgroundColor*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - r: <number> The red component (0-255).
            - g: <number> The green component (0-255).
            - b: <number> The blue component (0-255).
            - a: <number> The alpha component (0-255).
    - 2:
        - Returns: Nothing
        - Arguments:
            - rgba: <table> A numerical indexed table with the red, green and 
              blue values as numbers. Alpha is 255 if it is not in the table

------------------------------------------------------------------------------
1.5.59. setBlendMode                              *love-graphics-setBlendMode*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - mode: <BlendMode> The blend mode to use.
    - 2:
        - Returns: Nothing
        - Arguments:
            - mode: <BlendMode> The blend mode to use.
            - alphamode: <BlendAlphaMode> What to do with the alpha of drawn 
              objects when blending.

------------------------------------------------------------------------------
1.5.60. setCanvas                                    *love-graphics-setCanvas*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - canvas: <Canvas> A render target.
            - ...: <Canvas> Additional render targets.

------------------------------------------------------------------------------
1.5.61. setColor                                      *love-graphics-setColor*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - red: <number> The amount of red.
            - green: <number> The amount of green.
            - blue: <number> The amount of blue.
            - alpha: <number> The amount of alpha. The alpha value will be 
              applied to all subsequent draw operations, even the drawing of an image.
    - 2:
        - Returns: Nothing
        - Arguments:
            - rgba: <table> A numerical indexed table with the red, green, 
              blue and alpha values as numbers. The alpha is optional and defaults to 255 
              if it is left out.

------------------------------------------------------------------------------
1.5.62. setColorMask                              *love-graphics-setColorMask*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - red: <boolean> Render red component.
            - green: <boolean> Render green component.
            - blue: <boolean> Render blue component.
            - alpha: <boolean> Render alpha component.

------------------------------------------------------------------------------
1.5.63. setDefaultFilter                      *love-graphics-setDefaultFilter*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - min: <FilterMode> Filter mode used when scaling the image down.
            - mag: <FilterMode> Filter mode used when scaling the image up.
            - anisotropy: <number> Maximum amount of Anisotropic Filtering 
              used.

------------------------------------------------------------------------------
1.5.64. setFont                                        *love-graphics-setFont*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - font: <Font> The Font object to use.

------------------------------------------------------------------------------
1.5.65. setLineJoin                                *love-graphics-setLineJoin*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - join: <LineJoin> The LineJoin to use.

------------------------------------------------------------------------------
1.5.66. setLineStyle                              *love-graphics-setLineStyle*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - style: <LineStyle> The LineStyle to use.

------------------------------------------------------------------------------
1.5.67. setLineWidth                              *love-graphics-setLineWidth*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - width: <number> The width of the line.

------------------------------------------------------------------------------
1.5.68. setNewFont                                  *love-graphics-setNewFont*

- Variants:
    - 1:
        - Returns:
            - font: <Font> The new font.
        - Arguments:
            - filename: <string> The path and name of the file with the font.
            - size: <number> The size of the font.
    - 2:
        - Returns:
            - font: <Font> The new font.
        - Arguments:
            - file: <File> A File with the font.
            - size: <number> The size of the font.
    - 3:
        - Returns:
            - font: <Font> The new font.
        - Arguments:
            - data: <Data> A Data with the font.
            - size: <number> The size of the font.

------------------------------------------------------------------------------
1.5.69. setShader                                    *love-graphics-setShader*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - shader: <Shader> The new shader.

------------------------------------------------------------------------------
1.5.70. setPointSize                              *love-graphics-setPointSize*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - size: <number> The new point size.

------------------------------------------------------------------------------
1.5.71. setScissor                                  *love-graphics-setScissor*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The X coordinate of upper left corner.
            - y: <number> The Y coordinate of upper left corner.
            - width: <number> The width of clipping rectangle.
            - height: <number> The height of clipping rectangle.
    - 2:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.5.72. setStencilTest                          *love-graphics-setStencilTest*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - comparemode: <CompareMode> The type of comparison to make for 
              each pixel.
            - comparevalue: <number> The value to use when comparing with the 
              stencil value of each pixel. Must be between 0 and 255.
    - 2:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.5.73. setWireframe                              *love-graphics-setWireframe*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - enable: <boolean> True to enable wireframe mode when drawing, 
              false to disable it.

------------------------------------------------------------------------------
1.5.74. shear                                            *love-graphics-shear*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - kx: <number> The shear factor on the x-axis.
            - ky: <number> The shear factor on the y-axis.

------------------------------------------------------------------------------
1.5.75. stencil                                        *love-graphics-stencil*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - stencilfunction: <function> Function which draws geometry. The 
              stencil values of pixels, rather than the color of each pixel, will be 
              affected by the geometry.
            - action: <StencilAction> How to modify any stencil values of 
              pixels that are touched by what's drawn in the stencil function.
            - value: <number> The new stencil value to use for pixels if the 
              "replace" stencil action is used. Has no effect with other stencil actions. 
              Must be between 0 and 255.
            - keepvalues: <boolean> True to preserve old stencil values of 
              pixels, false to re-set every pixel's stencil value to 0 before executing the 
              stencil function. love.graphics.clear will also re-set all stencil values.

------------------------------------------------------------------------------
1.5.76. translate                                    *love-graphics-translate*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - dx: <number> The translation relative to the x-axis.
            - dy: <number> The translation relative to the y-axis.

------------------------------------------------------------------------------
1.6. image                                                        *love-image*

Provides an interface to decode encoded image data.

- Types: 
    - CompressedImageData                           *love-CompressedImageData*
    - ImageData                                               *love-ImageData*
- Enums: 
    - CompressedImageFormat                       *love-CompressedImageFormat*
    - ImageFormat                                           *love-ImageFormat*

------------------------------------------------------------------------------
1.6.1. isCompressed                                  *love-image-isCompressed*

- Variants:
    - 1:
        - Returns:
            - compressed: <boolean> Whether the file can be loaded as 
              CompressedImageData or not.
        - Arguments:
            - filename: <string> The filename of the potentially compressed 
              image file.
    - 2:
        - Returns:
            - compressed: <boolean> Whether the FileData can be loaded as 
              CompressedImageData or not.
        - Arguments:
            - fileData: <FileData> A FileData potentially containing a 
              compressed image.

------------------------------------------------------------------------------
1.6.2. newCompressedData                        *love-image-newCompressedData*

- Variants:
    - 1:
        - Returns:
            - compressedImageData: <CompressedImageData> The new 
              CompressedImageData object.
        - Arguments:
            - filename: <string> The filename of the compressed image file.
    - 2:
        - Returns:
            - compressedImageData: <CompressedImageData> The new 
              CompressedImageData object.
        - Arguments:
            - fileData: <FileData> A FileData containing a compressed image.

------------------------------------------------------------------------------
1.6.3. newImageData                                  *love-image-newImageData*

- Variants:
    - 1:
        - Returns:
            - imageData: <ImageData> The new blank ImageData object. Each 
              pixel's color values, (including the alpha values!) will be set to zero.
        - Arguments:
            - width: <number> The width of the ImageData.
            - height: <number> The height of the ImageData.
    - 2:
        - Returns:
            - imageData: <ImageData> The new ImageData object.
        - Arguments:
            - width: <number> The width of the ImageData.
            - height: <number> The height of the ImageData.
            - data: <string> The data to load into the ImageData.
    - 3:
        - Returns:
            - imageData: <ImageData> The new ImageData object.
        - Arguments:
            - filename: <string> The filename of the image file.
    - 4:
        - Returns:
            - imageData: <ImageData> The new ImageData object.
        - Arguments:
            - filedata: <FileData> The encoded file data to decode into image 
              data.

------------------------------------------------------------------------------
1.7. joystick                                                  *love-joystick*

Provides an interface to the user's joystick.

- Types: 
    - Joystick                                                 *love-Joystick*
- Enums: 
    - GamepadAxis                                           *love-GamepadAxis*
    - GamepadButton                                       *love-GamepadButton*
    - JoystickHat                                           *love-JoystickHat*
    - JoystickInputType                               *love-JoystickInputType*

------------------------------------------------------------------------------
1.7.1. getJoystickCount                       *love-joystick-getJoystickCount*

- Variants:
    - 1:
        - Returns:
            - joystickcount: <number> The number of connected joysticks.
        - Arguments: None

------------------------------------------------------------------------------
1.7.2. getJoysticks                               *love-joystick-getJoysticks*

- Variants:
    - 1:
        - Returns:
            - joysticks: <table> The list of currently connected Joysticks.
        - Arguments: None

------------------------------------------------------------------------------
1.7.3. loadGamepadMappings                 *love-joystick-loadGamepadMappings*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - filename: <string> The filename to load the mappings string 
              from.
    - 2:
        - Returns: Nothing
        - Arguments:
            - mappings: <string> The mappings string to load.

------------------------------------------------------------------------------
1.7.4. saveGamepadMappings                 *love-joystick-saveGamepadMappings*

- Variants:
    - 1:
        - Returns:
            - mappings: <string> The mappings string that was written to the 
              file.
        - Arguments:
            - filename: <string> The filename to save the mappings string to.
    - 2:
        - Returns:
            - mappings: <string> The mappings string.
        - Arguments: None

------------------------------------------------------------------------------
1.7.5. setGamepadMapping                     *love-joystick-setGamepadMapping*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> Whether the virtual gamepad button was 
              successfully bound.
        - Arguments:
            - guid: <string> The OS-dependent GUID for the type of Joystick 
              the binding will affect.
            - button: <GamepadButton> The virtual gamepad button to bind.
            - inputtype: <JoystickInputType> The type of input to bind the 
              virtual gamepad button to.
            - inputindex: <number> The index of the axis, button, or hat to 
              bind the virtual gamepad button to.
            - hatdirection: <JoystickHat> The direction of the hat, if the 
              virtual gamepad button will be bound to a hat. nil otherwise.
    - 2:
        - Returns:
            - success: <boolean> Whether the virtual gamepad button was 
              successfully bound.
        - Arguments:
            - guid: <string> The OS-dependent GUID for the type of Joystick 
              the binding will affect.
            - button: <GamepadButton> The virtual gamepad axis to bind.
            - inputtype: <JoystickInputType> The type of input to bind the 
              virtual gamepad axis to.
            - inputindex: <number> The index of the axis, button, or hat to 
              bind the virtual gamepad axis to.
            - hatdirection: <JoystickHat> The direction of the hat, if the 
              virtual gamepad axis will be bound to a hat. nil otherwise.

------------------------------------------------------------------------------
1.8. keyboard                                                  *love-keyboard*

Provides an interface to the user's keyboard.

- Types: None
- Enums: 
    - KeyConstant                                           *love-KeyConstant*
    - Scancode                                                 *love-Scancode*

------------------------------------------------------------------------------
1.8.1. getKeyFromScancode                   *love-keyboard-getKeyFromScancode*

- Variants:
    - 1:
        - Returns:
            - key: <KeyConstant> The key corresponding to the given scancode, 
              or "unknown" if the scancode doesn't map to a KeyConstant on the current 
              system.
        - Arguments:
            - scancode: <Scancode> The scancode to get the key from.

------------------------------------------------------------------------------
1.8.2. getScancodeFromKey                   *love-keyboard-getScancodeFromKey*

- Variants:
    - 1:
        - Returns:
            - scancode: <Scancode> The scancode corresponding to the given 
              key, or "unknown" if the given key has no known physical representation on 
              the current system.
        - Arguments:
            - key: <KeyConstant> The key to get the scancode from.

------------------------------------------------------------------------------
1.8.3. hasKeyRepeat                               *love-keyboard-hasKeyRepeat*

- Variants:
    - 1:
        - Returns:
            - enabled: <boolean> Whether key repeat is enabled.
        - Arguments: None

------------------------------------------------------------------------------
1.8.4. hasTextInput                               *love-keyboard-hasTextInput*

- Variants:
    - 1:
        - Returns:
            - enabled: <boolean> Whether text input events are enabled.
        - Arguments: None

------------------------------------------------------------------------------
1.8.5. isDown                                           *love-keyboard-isDown*

- Variants:
    - 1:
        - Returns:
            - down: <boolean> True if the key is down, false if not.
        - Arguments:
            - key: <KeyConstant> The key to check.
    - 2:
        - Returns:
            - anyDown: <boolean> True if any supplied key is down, false if 
              not.
        - Arguments:
            - key: <KeyConstant> A key to check.
            - ...: <KeyConstant> Additional keys to check.

------------------------------------------------------------------------------
1.8.6. isScancodeDown                           *love-keyboard-isScancodeDown*

- Variants:
    - 1:
        - Returns:
            - down: <boolean> True if any supplied Scancode is down, false if 
              not.
        - Arguments:
            - scancode: <Scancode> A Scancode to check.
            - ...: <Scancode> Additional Scancodes to check.

------------------------------------------------------------------------------
1.8.7. setKeyRepeat                               *love-keyboard-setKeyRepeat*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - enable: <boolean> Whether repeat keypress events should be 
              enabled when a key is held down.

------------------------------------------------------------------------------
1.8.8. setTextInput                               *love-keyboard-setTextInput*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - enable: <boolean> Whether text input events should be enabled.

------------------------------------------------------------------------------
1.9. math                                                          *love-math*

Provides system-independent mathematical functions.

- Types: 
    - BezierCurve                                           *love-BezierCurve*
    - CompressedData                                     *love-CompressedData*
    - RandomGenerator                                   *love-RandomGenerator*
- Enums: 
    - CompressedDataFormat                         *love-CompressedDataFormat*

------------------------------------------------------------------------------
1.9.1. compress                                           *love-math-compress*

- Variants:
    - 1:
        - Returns:
            - compressedData: <CompressedData> A new Data object containing 
              the compressed version of the string.
        - Arguments:
            - rawstring: <string> The raw (un-compressed) string to compress.
            - format: <CompressedDataFormat> The format to use when 
              compressing the string.
            - level: <number> The level of compression to use, between 0 and 
              9. -1 indicates the default level. The meaning of this argument depends on 
              the compression format being used.
    - 2:
        - Returns:
            - compressedData: <CompressedData> A new Data object containing 
              the compressed version of the raw data.
        - Arguments:
            - data: <Data> A Data object containing the raw (un-compressed) 
              data to compress.
            - format: <CompressedDataFormat> The format to use when 
              compressing the data.
            - level: <number> The level of compression to use, between 0 and 
              9. -1 indicates the default level. The meaning of this argument depends on 
              the compression format being used.

------------------------------------------------------------------------------
1.9.2. decompress                                       *love-math-decompress*

- Variants:
    - 1:
        - Returns:
            - rawstring: <string> A string containing the raw decompressed 
              data.
        - Arguments:
            - compressedData: <CompressedData> The compressed data to 
              decompress.
    - 2:
        - Returns:
            - rawstring: <string> A string containing the raw decompressed 
              data.
        - Arguments:
            - compressedString: <string> A string containing data previously 
              compressed with love.math.compress.
            - format: <CompressedDataFormat> The format that was used to 
              compress the given string.
    - 3:
        - Returns:
            - rawstring: <string> A string containing the raw decompressed 
              data.
        - Arguments:
            - data: <Data> A Data object containing data previously 
              compressed with love.math.compress.
            - format: <CompressedDataFormat> The format that was used to 
              compress the given data.

------------------------------------------------------------------------------
1.9.3. gammaToLinear                                 *love-math-gammaToLinear*

- Variants:
    - 1:
        - Returns:
            - lr: <number> The red channel of the converted color in linear 
              RGB space.
            - lg: <number> The green channel of the converted color in linear 
              RGB space.
            - lb: <number> The blue channel of the converted color in linear 
              RGB space.
        - Arguments:
            - r: <number> The red channel of the sRGB color to convert.
            - g: <number> The green channel of the sRGB color to convert.
            - b: <number> The blue channel of the sRGB color to convert.
    - 2:
        - Returns:
            - lr: <number> The red channel of the converted color in linear 
              RGB space.
            - lg: <number> The green channel of the converted color in linear 
              RGB space.
            - lb: <number> The blue channel of the converted color in linear 
              RGB space.
        - Arguments:
            - color: <table> An array with the red, green, and blue channels 
              of the sRGB color to convert.
    - 3:
        - Returns:
            - lc: <number> The value of the color channel in linear RGB 
              space.
        - Arguments:
            - c: <number> The value of a color channel in sRGB space to 
              convert.

------------------------------------------------------------------------------
1.9.4. getRandomSeed                                 *love-math-getRandomSeed*

- Variants:
    - 1:
        - Returns:
            - low: <number> Integer number representing the lower 32 bits of 
              the random number generator's 64 bit state value.
            - high: <number> Integer number representing the higher 32 bits 
              of the random number generator's 64 bit state value.
        - Arguments: None

------------------------------------------------------------------------------
1.9.5. getRandomState                               *love-math-getRandomState*

- Variants:
    - 1:
        - Returns:
            - state: <string> The current state of the RandomGenerator 
              object, represented as a string.
        - Arguments: None

------------------------------------------------------------------------------
1.9.6. isConvex                                           *love-math-isConvex*

- Variants:
    - 1:
        - Returns:
            - convex: <boolean> Whether the given polygon is convex.
        - Arguments:
            - vertices: <table> The vertices of the polygon as a table in the 
              form of {x1, y1, x2, y2, x3, y3, ...}.
    - 2:
        - Returns:
            - convex: <boolean> Whether the given polygon is convex.
        - Arguments:
            - x1: <number> The position of the first vertex of the polygon on 
              the x-axis.
            - y1: <number> The position of the first vertex of the polygon on 
              the y-axis.
            - x2: <number> The position of the second vertex of the polygon 
              on the x-axis.
            - y2: <number> The position of the second vertex of the polygon 
              on the y-axis.
            - x3: <number> The position of the third vertex of the polygon on 
              the x-axis.
            - y3: <number> The position of the third vertex of the polygon on 
              the y-axis.
            - ...: <number> Additional vertices.

------------------------------------------------------------------------------
1.9.7. linearToGamma                                 *love-math-linearToGamma*

- Variants:
    - 1:
        - Returns:
            - cr: <number> The red channel of the converted color in gamma 
              sRGB space.
            - cg: <number> The green channel of the converted color in gamma 
              sRGB space.
            - cb: <number> The blue channel of the converted color in gamma 
              sRGB space.
        - Arguments:
            - lr: <number> The red channel of the linear RGB color to 
              convert.
            - lg: <number> The green channel of the linear RGB color to 
              convert.
            - lb: <number> The blue channel of the linear RGB color to 
              convert.
    - 2:
        - Returns:
            - cr: <number> The red channel of the converted color in gamma 
              sRGB space.
            - cg: <number> The green channel of the converted color in gamma 
              sRGB space.
            - cb: <number> The blue channel of the converted color in gamma 
              sRGB space.
        - Arguments:
            - color: <table> An array with the red, green, and blue channels 
              of the linear RGB color to convert.
    - 3:
        - Returns:
            - c: <number> The value of the color channel in gamma sRGB space.
        - Arguments:
            - lc: <number> The value of a color channel in linear RGB space 
              to convert.

------------------------------------------------------------------------------
1.9.8. newBezierCurve                               *love-math-newBezierCurve*

- Variants:
    - 1:
        - Returns:
            - curve: <BezierCurve> A Bézier curve object.
        - Arguments:
            - vertices: <table> The vertices of the control polygon as a 
              table in the form of {x1, y1, x2, y2, x3, y3, ...}.
    - 2:
        - Returns:
            - curve: <BezierCurve> A Bézier curve object.
        - Arguments:
            - x1: <number> The position of the first vertex of the control 
              polygon on the x-axis.
            - y1: <number> The position of the first vertex of the control 
              polygon on the y-axis.
            - x2: <number> The position of the second vertex of the control 
              polygon on the x-axis.
            - y2: <number> The position of the second vertex of the control 
              polygon on the y-axis.
            - x3: <number> The position of the third vertex of the control 
              polygon on the x-axis.
            - y3: <number> The position of the third vertex of the control 
              polygon on the y-axis.
            - ...: <number> Additional vertices.

------------------------------------------------------------------------------
1.9.9. newRandomGenerator                       *love-math-newRandomGenerator*

- Variants:
    - 1:
        - Returns:
            - rng: <RandomGenerator> A Random Number Generator object.
        - Arguments: None
    - 2:
        - Returns:
            - rng: <RandomGenerator> A Random Number Generator object.
        - Arguments:
            - low: <number> The lower 32 bits of the state number to use for 
              this instance of the object.
            - high: <number> The higher 32 bits of the state number to use 
              for this instance of the object.
    - 3:
        - Returns:
            - rng: <RandomGenerator> A Random Number Generator object.
        - Arguments:
            - seed: <string> A state of a RandomGenerator object returned by 
              RandomGenerator:getState.

------------------------------------------------------------------------------
1.9.10. noise                                                *love-math-noise*

- Variants:
    - 1:
        - Returns:
            - value: <number> The noise value in the range of [0, 1].
        - Arguments:
            - x: <number> The number used to generate the noise value.
    - 2:
        - Returns:
            - value: <number> The noise value in the range of [0, 1].
        - Arguments:
            - x: <number> The first value of the 2-dimensional vector used to 
              generate the noise value.
            - y: <number> The second value of the 2-dimensional vector used 
              to generate the noise value.
    - 3:
        - Returns:
            - value: <number> The noise value in the range of [0, 1].
        - Arguments:
            - x: <number> The first value of the 3-dimensional vector used to 
              generate the noise value.
            - y: <number> The second value of the 3-dimensional vector used 
              to generate the noise value.
            - z: <number> The third value of the 3-dimensional vector used to 
              generate the noise value.
    - 4:
        - Returns:
            - value: <number> The noise value in the range of [0, 1].
        - Arguments:
            - x: <number> The first value of the 4-dimensional vector used to 
              generate the noise value.
            - y: <number> The second value of the 4-dimensional vector used 
              to generate the noise value.
            - z: <number> The third value of the 4-dimensional vector used to 
              generate the noise value.
            - w: <number> The fourth value of the 4-dimensional vector used 
              to generate the noise value.

------------------------------------------------------------------------------
1.9.11. random                                              *love-math-random*

- Variants:
    - 1:
        - Returns:
            - number: <number> The pseudo-random number.
        - Arguments: None
    - 2:
        - Returns:
            - number: <number> The pseudo-random integer number.
        - Arguments:
            - max: <number> The maximum possible value it should return.
    - 3:
        - Returns:
            - number: <number> The pseudo-random integer number.
        - Arguments:
            - min: <number> The minimum possible value it should return.
            - max: <number> The maximum possible value it should return.

------------------------------------------------------------------------------
1.9.12. randomNormal                                  *love-math-randomNormal*

- Variants:
    - 1:
        - Returns:
            - number: <number> Normally distributed random number with 
              variance (stddev)² and the specified mean.
        - Arguments:
            - stddev: <number> Standard deviation of the distribution.
            - mean: <number> The mean of the distribution.

------------------------------------------------------------------------------
1.9.13. setRandomSeed                                *love-math-setRandomSeed*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - seed: <number> The integer number with which you want to seed 
              the randomization. Must be within the range of [1, 2^53].
    - 2:
        - Returns: Nothing
        - Arguments:
            - low: <number> The lower 32 bits of the state value. Must be 
              within the range of [0, 2^32 - 1].
            - high: <number> The higher 32 bits of the state value. Must be 
              within the range of [0, 2^32 - 1].

------------------------------------------------------------------------------
1.9.14. setRandomState                              *love-math-setRandomState*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - state: <string> The current state of the RandomGenerator 
              object, represented as a string.

------------------------------------------------------------------------------
1.9.15. triangulate                                    *love-math-triangulate*

- Variants:
    - 1:
        - Returns:
            - triangles: <table> List of triangles the polygon is composed 
              of, in the form of {{x1, y1, x2, y2, x3, y3}, {x1, y1, x2, y2, x3, y3}, ...}.
        - Arguments:
            - polygon: <table> Polygon to triangulate. Must not intersect 
              itself.
    - 2:
        - Returns:
            - triangles: <table> List of triangles the polygon is composed 
              of, in the form of {{x1, y1, x2, y2, x3, y3}, {x1, y1, x2, y2, x3, y3}, ...}.
        - Arguments:
            - x1: <number> The position of the first vertex of the polygon on 
              the x-axis.
            - y1: <number> The position of the first vertex of the polygon on 
              the y-axis.
            - x2: <number> The position of the second vertex of the polygon 
              on the x-axis.
            - y2: <number> The position of the second vertex of the polygon 
              on the y-axis.
            - x3: <number> The position of the third vertex of the polygon on 
              the x-axis.
            - y3: <number> The position of the third vertex of the polygon on 
              the y-axis.
            - ...: <number> Additional vertices.

------------------------------------------------------------------------------
1.10. mouse                                                       *love-mouse*

Provides an interface to the user's mouse.

- Types: 
    - Cursor                                                     *love-Cursor*
- Enums: 
    - CursorType                                             *love-CursorType*

------------------------------------------------------------------------------
1.10.1. getCursor                                       *love-mouse-getCursor*

- Variants:
    - 1:
        - Returns:
            - cursor: <Cursor> The current cursor, or nil if no cursor is 
              set.
        - Arguments: None

------------------------------------------------------------------------------
1.10.2. getPosition                                   *love-mouse-getPosition*

- Variants:
    - 1:
        - Returns:
            - x: <number> The position of the mouse along the x-axis.
            - y: <number> The position of the mouse along the y-axis.
        - Arguments: None

------------------------------------------------------------------------------
1.10.3. getRelativeMode                           *love-mouse-getRelativeMode*

- Variants:
    - 1:
        - Returns:
            - enabled: <boolean> True if relative mode is enabled, false if 
              it's disabled.
        - Arguments: None

------------------------------------------------------------------------------
1.10.4. getSystemCursor                           *love-mouse-getSystemCursor*

- Variants:
    - 1:
        - Returns:
            - cursor: <Cursor> The Cursor object representing the system 
              cursor type.
        - Arguments:
            - ctype: <CursorType> The type of system cursor to get.

------------------------------------------------------------------------------
1.10.5. getX                                                 *love-mouse-getX*

- Variants:
    - 1:
        - Returns:
            - x: <number> The position of the mouse along the x-axis.
        - Arguments: None

------------------------------------------------------------------------------
1.10.6. getY                                                 *love-mouse-getY*

- Variants:
    - 1:
        - Returns:
            - y: <number> The position of the mouse along the y-axis.
        - Arguments: None

------------------------------------------------------------------------------
1.10.7. hasCursor                                       *love-mouse-hasCursor*

- Variants:
    - 1:
        - Returns:
            - hascursor: <boolean> Whether the system has cursor 
              functionality.
        - Arguments: None

------------------------------------------------------------------------------
1.10.8. isDown                                             *love-mouse-isDown*

- Variants:
    - 1:
        - Returns:
            - down: <boolean> True if the specified button is down.
        - Arguments:
            - button: <number> The index of a button to check. 1 is the 
              primary mouse button, 2 is the secondary mouse button, etc.
            - ...: <number> Additional button numbers to check.

------------------------------------------------------------------------------
1.10.9. isGrabbed                                       *love-mouse-isGrabbed*

- Variants:
    - 1:
        - Returns:
            - grabbed: <boolean> True if the cursor is grabbed, false if it 
              is not.
        - Arguments: None

------------------------------------------------------------------------------
1.10.10. isVisible                                      *love-mouse-isVisible*

- Variants:
    - 1:
        - Returns:
            - visible: <boolean> True if the cursor to visible, false if the 
              cursor is hidden.
        - Arguments: None

------------------------------------------------------------------------------
1.10.11. newCursor                                      *love-mouse-newCursor*

- Variants:
    - 1:
        - Returns:
            - cursor: <Cursor> The new Cursor object.
        - Arguments:
            - imageData: <ImageData> The ImageData to use for the the new 
              Cursor.
            - hotx: <number> The x-coordinate in the ImageData of the 
              cursor's hot spot.
            - hoty: <number> The y-coordinate in the ImageData of the 
              cursor's hot spot.
    - 2:
        - Returns:
            - cursor: <Cursor> The new Cursor object.
        - Arguments:
            - filepath: <string> Path to the image to use for the new Cursor.
            - hotx: <number> The x-coordinate in the ImageData of the 
              cursor's hot spot.
            - hoty: <number> The y-coordinate in the ImageData of the 
              cursor's hot spot.
    - 3:
        - Returns:
            - cursor: <Cursor> The new Cursor object.
        - Arguments:
            - fileData: <FileData> Data representing the image to use for the 
              new Cursor.
            - hotx: <number> The x-coordinate in the ImageData of the 
              cursor's hot spot.
            - hoty: <number> The y-coordinate in the ImageData of the 
              cursor's hot spot.

------------------------------------------------------------------------------
1.10.12. setCursor                                      *love-mouse-setCursor*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None
    - 2:
        - Returns: Nothing
        - Arguments:
            - cursor: <Cursor> The Cursor object to use as the current mouse 
              cursor.

------------------------------------------------------------------------------
1.10.13. setGrabbed                                    *love-mouse-setGrabbed*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - grab: <boolean> True to confine the mouse, false to let it 
              leave the window.

------------------------------------------------------------------------------
1.10.14. setPosition                                  *love-mouse-setPosition*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The new position of the mouse along the x-axis.
            - y: <number> The new position of the mouse along the y-axis.

------------------------------------------------------------------------------
1.10.15. setRelativeMode                          *love-mouse-setRelativeMode*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - enable: <boolean> True to enable relative mode, false to 
              disable it.

------------------------------------------------------------------------------
1.10.16. setVisible                                    *love-mouse-setVisible*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - visible: <boolean> True to set the cursor to visible, false to 
              hide the cursor.

------------------------------------------------------------------------------
1.10.17. setX                                                *love-mouse-setX*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The new position of the mouse along the x-axis.

------------------------------------------------------------------------------
1.10.18. setY                                                *love-mouse-setY*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - y: <number> The new position of the mouse along the y-axis.

------------------------------------------------------------------------------
1.11. physics                                                   *love-physics*

Can simulate 2D rigid body physics in a realistic manner. This module is based on Box2D, and this API corresponds to the Box2D API as closely as possible.

- Types: 
    - Body                                                         *love-Body*
    - ChainShape                                             *love-ChainShape*
    - CircleShape                                           *love-CircleShape*
    - Contact                                                   *love-Contact*
    - EdgeShape                                               *love-EdgeShape*
    - DistanceJoint                                       *love-DistanceJoint*
    - Fixture                                                   *love-Fixture*
    - FrictionJoint                                       *love-FrictionJoint*
    - GearJoint                                               *love-GearJoint*
    - Joint                                                       *love-Joint*
    - MotorJoint                                             *love-MotorJoint*
    - MouseJoint                                             *love-MouseJoint*
    - PolygonShape                                         *love-PolygonShape*
    - PrismaticJoint                                     *love-PrismaticJoint*
    - PulleyJoint                                           *love-PulleyJoint*
    - RevoluteJoint                                       *love-RevoluteJoint*
    - RopeJoint                                               *love-RopeJoint*
    - Shape                                                       *love-Shape*
    - WeldJoint                                               *love-WeldJoint*
    - WheelJoint                                             *love-WheelJoint*
    - World                                                       *love-World*
- Enums: 
    - BodyType                                                 *love-BodyType*
    - JointType                                               *love-JointType*
    - ShapeType                                               *love-ShapeType*

------------------------------------------------------------------------------
1.11.1. getDistance                                 *love-physics-getDistance*

- Variants:
    - 1:
        - Returns:
            - distance: <number> The distance of the two points.
            - x1: <number> The x-coordinate of the first point.
            - y1: <number> The y-coordinate of the first point.
            - x2: <number> The x-coordinate of the second point.
            - y2: <number> The y-coordinate of the second point.
        - Arguments:
            - fixture1: <Fixture> The first fixture.
            - fixture2: <Fixture> The second fixture.

------------------------------------------------------------------------------
1.11.2. getMeter                                       *love-physics-getMeter*

- Variants:
    - 1:
        - Returns:
            - scale: <number> The size of 1 meter in pixels.
        - Arguments: None

------------------------------------------------------------------------------
1.11.3. newBody                                         *love-physics-newBody*

- Variants:
    - 1:
        - Returns:
            - body: <Body> A new body.
        - Arguments:
            - world: <World> The world to create the body in.
            - x: <number> The x position of the body.
            - y: <number> The y position of the body.
            - type: <BodyType> The type of the body.

------------------------------------------------------------------------------
1.11.4. newChainShape                             *love-physics-newChainShape*

- Variants:
    - 1:
        - Returns:
            - shape: <ChainShape> The new shape.
        - Arguments:
            - loop: <boolean> If the chain should loop back to the first 
              point.
            - x1: <number> The x position of the first point.
            - y1: <number> The y position of the first point.
            - x2: <number> The x position of the second point.
            - y2: <number> The y position of the second point.
            - ...: <number> Additional point positions.
    - 2:
        - Returns:
            - shape: <ChainShape> The new shape.
        - Arguments:
            - loop: <boolean> If the chain should loop back to the first 
              point.
            - points: <table> A list of points to construct the ChainShape, 
              in the form of {x1, y1, x2, y2, ...}.

------------------------------------------------------------------------------
1.11.5. newCircleShape                           *love-physics-newCircleShape*

- Variants:
    - 1:
        - Returns:
            - shape: <CircleShape> The new shape.
        - Arguments:
            - radius: <number> The radius of the circle.
    - 2:
        - Returns:
            - shape: <CircleShape> The new shape.
        - Arguments:
            - x: <number> The x offset of the circle.
            - y: <number> The y offset of the circle.
            - radius: <number> The radius of the circle.

------------------------------------------------------------------------------
1.11.6. newDistanceJoint                       *love-physics-newDistanceJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <DistanceJoint> The new distance joint.
        - Arguments:
            - body1: <Body> The first body to attach to the joint.
            - body2: <Body> The second body to attach to the joint.
            - x1: <number> The x position of the first anchor point.
            - y1: <number> The y position of the first anchor point.
            - x2: <number> The x position of the second anchor point.
            - y2: <number> The y position of the second anchor point.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.7. newEdgeShape                               *love-physics-newEdgeShape*

- Variants:
    - 1:
        - Returns:
            - shape: <EdgeShape> The new shape.
        - Arguments:
            - x1: <number> The x position of the first point.
            - y1: <number> The y position of the first point.
            - x2: <number> The x position of the second point.
            - y2: <number> The y position of the second point.

------------------------------------------------------------------------------
1.11.8. newFixture                                   *love-physics-newFixture*

- Variants:
    - 1:
        - Returns:
            - fixture: <Fixture> The new fixture.
        - Arguments:
            - body: <Body> The body which gets the fixture attached.
            - shape: <Shape> The shape of the fixture.
            - density: <number> The density of the fixture.

------------------------------------------------------------------------------
1.11.9. newFrictionJoint                       *love-physics-newFrictionJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <FrictionJoint> The new FrictionJoint.
        - Arguments:
            - body1: <Body> The first body to attach to the joint.
            - body2: <Body> The second body to attach to the joint.
            - x: <number> The x position of the anchor point.
            - y: <number> The y position of the anchor point.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with eachother.

------------------------------------------------------------------------------
1.11.10. newGearJoint                              *love-physics-newGearJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <Joint> The new gear joint.
        - Arguments:
            - joint1: <Joint> The first joint to connect with a gear joint.
            - joint2: <Joint> The second joint to connect with a gear joint.
            - ratio: <number> The gear ratio.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.11. newMotorJoint                            *love-physics-newMotorJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <MotorJoint> The new MotorJoint.
        - Arguments:
            - body1: <Body> The first body to attach to the joint.
            - body2: <Body> The second body to attach to the joint.
            - correctionFactor: <number> The joint's initial position 
              correction factor, in the range of [0, 1].
    - 2:
        - Returns:
            - joint: <MotorJoint> The new MotorJoint.
        - Arguments:
            - body1: <Body> The first body to attach to the joint.
            - body2: <Body> The second body to attach to the joint.
            - correctionFactor: <number> The joint's initial position 
              correction factor, in the range of [0, 1].
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.12. newMouseJoint                            *love-physics-newMouseJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <Joint> The new mouse joint.
        - Arguments:
            - body: <Body> The body to attach to the mouse.
            - x: <number> The x position of the connecting point.
            - y: <number> The y position of the connecting point.

------------------------------------------------------------------------------
1.11.13. newPolygonShape                        *love-physics-newPolygonShape*

- Variants:
    - 1:
        - Returns:
            - shape: <PolygonShape> A new PolygonShape.
        - Arguments:
            - x1: <number> The position of first point on the x-axis.
            - y1: <number> The position of first point on the y-axis.
            - x2: <number> The position of second point on the x-axis.
            - y2: <number> The position of second point on the y-axis.
            - ...: <number> You can continue passing more point positions to 
              create the PolygonShape.
    - 2:
        - Returns:
            - shape: <PolygonShape> A new PolygonShape.
        - Arguments:
            - vertices: <table> A list of vertices to construct the polygon, 
              in the form of {x1, y1, x2, y2, x3, y3, ...}.

------------------------------------------------------------------------------
1.11.14. newPrismaticJoint                    *love-physics-newPrismaticJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <PrismaticJoint> The new prismatic joint.
        - Arguments:
            - body1: <Body> The first body to connect with a prismatic joint.
            - body2: <Body> The second body to connect with a prismatic 
              joint.
            - x: <number> The x coordinate of the anchor point.
            - y: <number> The y coordinate of the anchor point.
            - ax: <number> The x coordinate of the axis unit vector.
            - ay: <number> The y coordinate of the axis unit vector.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.
    - 2:
        - Returns:
            - joint: <PrismaticJoint> The new prismatic joint.
        - Arguments:
            - body1: <Body> The first body to connect with a prismatic joint.
            - body2: <Body> The second body to connect with a prismatic 
              joint.
            - x1: <number> The x coordinate of the first anchor point.
            - y1: <number> The y coordinate of the first anchor point.
            - x2: <number> The x coordinate of the second anchor point.
            - y2: <number> The y coordinate of the second anchor point.
            - ax: <number> The x coordinate of the axis unit vector.
            - ay: <number> The y coordinate of the axis unit vector.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.15. newPulleyJoint                          *love-physics-newPulleyJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <Joint> The new pulley joint.
        - Arguments:
            - body1: <Body> The first body to connect with a pulley joint.
            - body2: <Body> The second body to connect with a pulley joint.
            - gx1: <number> The x coordinate of the first body's ground 
              anchor.
            - gy1: <number> The y coordinate of the first body's ground 
              anchor.
            - gx2: <number> The x coordinate of the second body's ground 
              anchor.
            - gy2: <number> The y coordinate of the second body's ground 
              anchor.
            - x1: <number> The x coordinate of the pulley joint anchor in the 
              first body.
            - y1: <number> The y coordinate of the pulley joint anchor in the 
              first body.
            - x2: <number> The x coordinate of the pulley joint anchor in the 
              second body.
            - y2: <number> The y coordinate of the pulley joint anchor in the 
              second body.
            - ratio: <number> The joint ratio.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.16. newRectangleShape                    *love-physics-newRectangleShape*

- Variants:
    - 1:
        - Returns:
            - shape: <PolygonShape> A new PolygonShape.
        - Arguments:
            - width: <number> The width of the rectangle.
            - height: <number> The height of the rectangle.
    - 2:
        - Returns:
            - shape: <PolygonShape> A new PolygonShape.
        - Arguments:
            - x: <number> The offset along the x-axis.
            - y: <number> The offset along the y-axis.
            - width: <number> The width of the rectangle.
            - height: <number> The height of the rectangle.
            - angle: <number> The initial angle of the rectangle.

------------------------------------------------------------------------------
1.11.17. newRevoluteJoint                      *love-physics-newRevoluteJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <Joint> The new revolute joint.
        - Arguments:
            - body1: <Body> The first body to connect with a Revolute Joint.
            - body2: <Body> The second body to connect with a Revolute Joint.
            - x: <number> The x position of the connecting point.
            - y: <number> The y position of the connecting point.
            - collideConnected: <number> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.18. newRopeJoint                              *love-physics-newRopeJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <RopeJoint> The new RopeJoint.
        - Arguments:
            - body1: <Body> The first body to attach to the joint.
            - body2: <Body> The second body to attach to the joint.
            - x1: <number> The x position of the first anchor point.
            - y1: <number> The y position of the first anchor point.
            - x2: <number> The x position of the second anchor point.
            - y2: <number> The y position of the second anchor point.
            - maxLength: <number> The maximum distance for the bodies.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.19. newWeldJoint                              *love-physics-newWeldJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <WeldJoint> The new WeldJoint.
        - Arguments:
            - body1: <Body> The first body to attach to the joint.
            - body2: <Body> The second body to attach to the joint.
            - x: <number> The x position of the anchor point.
            - y: <number> The y position of the anchor point.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.20. newWheelJoint                            *love-physics-newWheelJoint*

- Variants:
    - 1:
        - Returns:
            - joint: <WheelJoint> The new WheelJoint.
        - Arguments:
            - body1: <Body> The first body.
            - body2: <Body> The second body.
            - x: <number> The x position of the anchor point.
            - y: <number> The y position of the anchor point.
            - ax: <number> The x position of the axis unit vector.
            - ay: <number> The y position of the axis unit vector.
            - collideConnected: <boolean> Specifies whether the two bodies 
              should collide with each other.

------------------------------------------------------------------------------
1.11.21. newWorld                                      *love-physics-newWorld*

- Variants:
    - 1:
        - Returns:
            - world: <World> A brave new World.
        - Arguments:
            - xg: <number> The x component of gravity.
            - yg: <number> The y component of gravity.
            - sleep: <boolean> Whether the bodies in this world are allowed 
              to sleep.

------------------------------------------------------------------------------
1.11.22. setMeter                                      *love-physics-setMeter*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - scale: <number> The scale factor as an integer.

------------------------------------------------------------------------------
1.12. sound                                                       *love-sound*

This module is responsible for decoding sound files. It can't play the sounds, see love.audio for that.

- Types: 
    - Decoder                                                   *love-Decoder*
    - SoundData                                               *love-SoundData*
- Enums: None

------------------------------------------------------------------------------
1.12.1. newDecoder                                     *love-sound-newDecoder*

- Variants:
    - 1:
        - Returns:
            - decoder: <Decoder> A new Decoder object.
        - Arguments:
            - file: <File> The file with encoded sound data.
            - buffer: <number> The size of each decoded chunk, in bytes.
    - 2:
        - Returns:
            - decoder: <Decoder> A new Decoder object.
        - Arguments:
            - filename: <string> The filename of the file with encoded sound 
              data.
            - buffer: <number> The size of each decoded chunk, in bytes.

------------------------------------------------------------------------------
1.12.2. newSoundData                                 *love-sound-newSoundData*

- Variants:
    - 1:
        - Returns:
            - soundData: <SoundData> A new SoundData object.
        - Arguments:
            - filename: <string> The filename of the file to load.
    - 2:
        - Returns:
            - soundData: <SoundData> A new SoundData object.
        - Arguments:
            - file: <File> A File pointing to an audio file.
    - 3:
        - Returns:
            - soundData: <SoundData> A new SoundData object.
        - Arguments:
            - data: <Data> The encoded data to decode into audio.
    - 4:
        - Returns:
            - soundData: <SoundData> A new SoundData object.
        - Arguments:
            - samples: <number> Total number of samples.
            - rate: <number> Number of samples per second
            - bits: <number> Bits per sample (8 or 16).
            - channels: <number> Either 1 for mono or 2 for stereo.

------------------------------------------------------------------------------
1.13. system                                                     *love-system*

Provides access to information about the user's system.

- Types: None
- Enums: 
    - PowerState                                             *love-PowerState*

------------------------------------------------------------------------------
1.13.1. getClipboardText                        *love-system-getClipboardText*

- Variants:
    - 1:
        - Returns:
            - text: <string> The text currently held in the system's 
              clipboard.
        - Arguments: None

------------------------------------------------------------------------------
1.13.2. getOS                                              *love-system-getOS*

- Variants:
    - 1:
        - Returns:
            - osString: <string> The current operating system. "OS X", 
              "Windows", "Linux", "Android" or "iOS".
        - Arguments: None

------------------------------------------------------------------------------
1.13.3. getPowerInfo                                *love-system-getPowerInfo*

- Variants:
    - 1:
        - Returns:
            - state: <PowerState> The basic state of the power supply.
            - percent: <number> Percentage of battery life left, between 0 
              and 100. nil if the value can't be determined or there's no battery.
            - seconds: <number> Seconds of battery life left. nil if the 
              value can't be determined or there's no battery.
        - Arguments: None

------------------------------------------------------------------------------
1.13.4. getProcessorCount                      *love-system-getProcessorCount*

- Variants:
    - 1:
        - Returns:
            - cores: <number> Gets the number of CPU cores in the system.
        - Arguments: None

------------------------------------------------------------------------------
1.13.5. openURL                                          *love-system-openURL*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> Whether the URL was opened successfully.
        - Arguments:
            - url: <string> The URL to open. Must be formatted as a proper 
              URL. To open a file or folder, "file://" must be prepended to the path.

------------------------------------------------------------------------------
1.13.6. setClipboardText                        *love-system-setClipboardText*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - text: <string> The new text to hold in the system's clipboard.

------------------------------------------------------------------------------
1.13.7. vibrate                                          *love-system-vibrate*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - seconds: <number> The duration to vibrate for. If called on an 
              iOS device, it will always vibrate for 0.5 seconds due to limitations in the 
              iOS system APIs.

------------------------------------------------------------------------------
1.14. thread                                                     *love-thread*

Allows you to work with threads.

Threads are separate Lua environments, running in parallel to the main code. As their code runs separately, they can be used to compute complex operations without adversely affecting the frame rate of the main thread. However, as they are separate environments, they cannot access the variables and functions of the main thread, and communication between threads is limited.

All LOVE objects (userdata) are shared among threads so you'll only have to send their references across threads. You may run into concurrency issues if you manipulate an object on multiple threads at the same time.

When a Thread is started, it only loads the love.thread module. Every other module has to be loaded with require.

- Types: 
    - Thread                                                     *love-Thread*
    - Channel                                                   *love-Channel*
- Enums: None

------------------------------------------------------------------------------
1.14.1. getChannel                                    *love-thread-getChannel*

- Variants:
    - 1:
        - Returns:
            - channel: <Channel> A named channel object which can be further 
              manipulated.
        - Arguments:
            - name: <string> The name of the channel you want to create or 
              retrieve.

------------------------------------------------------------------------------
1.14.2. newChannel                                    *love-thread-newChannel*

- Variants:
    - 1:
        - Returns:
            - channel: <Channel> A unnamed channel object which can be 
              further manipulated.
        - Arguments: None

------------------------------------------------------------------------------
1.14.3. newThread                                      *love-thread-newThread*

- Variants:
    - 1:
        - Returns:
            - thread: <Thread> A new Thread that has yet to be started.
        - Arguments:
            - filename: <string> The name of the Lua File to use as source.
    - 2:
        - Returns:
            - thread: <Thread> A new Thread that has yet to be started.
        - Arguments:
            - fileData: <FileData> The FileData containing the Lua code to 
              use as the source.
    - 3:
        - Returns:
            - thread: <Thread> A new Thread that has yet to be started.
        - Arguments:
            - codestring: <string> A string containing the Lua code to use as 
              the source. It needs to either be at least 1024 characters long, or contain 
              at least one newline.

------------------------------------------------------------------------------
1.15. timer                                                       *love-timer*

Provides an interface to the user's clock.

- Types: None
- Enums: None

------------------------------------------------------------------------------
1.15.1. getAverageDelta                           *love-timer-getAverageDelta*

- Variants:
    - 1:
        - Returns:
            - delta: <number> The average delta time over the last second.
        - Arguments: None

------------------------------------------------------------------------------
1.15.2. getDelta                                         *love-timer-getDelta*

- Variants:
    - 1:
        - Returns:
            - dt: <number> The time passed (in seconds).
        - Arguments: None

------------------------------------------------------------------------------
1.15.3. getFPS                                             *love-timer-getFPS*

- Variants:
    - 1:
        - Returns:
            - fps: <number> The current FPS.
        - Arguments: None

------------------------------------------------------------------------------
1.15.4. getTime                                           *love-timer-getTime*

- Variants:
    - 1:
        - Returns:
            - time: <number> The time in seconds.
        - Arguments: None

------------------------------------------------------------------------------
1.15.5. sleep                                               *love-timer-sleep*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - s: <number> Seconds to sleep for.

------------------------------------------------------------------------------
1.15.6. step                                                 *love-timer-step*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.16. touch                                                       *love-touch*

Provides an interface to touch-screen presses.

- Types: None
- Enums: None

------------------------------------------------------------------------------
1.16.1. getPosition                                   *love-touch-getPosition*

- Variants:
    - 1:
        - Returns:
            - x: <number> The position along the x-axis of the touch-press 
              inside the window, in pixels.
            - y: <number> The position along the y-axis of the touch-press 
              inside the window, in pixels.
        - Arguments:
            - id: <light userdata> The identifier of the touch-press. Use 
              love.touch.getTouches, love.touchpressed, or love.touchmoved to obtain touch 
              id values.

------------------------------------------------------------------------------
1.16.2. getPressure                                   *love-touch-getPressure*

- Variants:
    - 1:
        - Returns:
            - pressure: <number> The pressure of the touch-press. Most touch 
              screens aren't pressure sensitive, in which case the pressure will be 1.
        - Arguments:
            - id: <light userdata> The identifier of the touch-press. Use 
              love.touch.getTouches, love.touchpressed, or love.touchmoved to obtain touch 
              id values.

------------------------------------------------------------------------------
1.16.3. getTouches                                     *love-touch-getTouches*

- Variants:
    - 1:
        - Returns:
            - touches: <table> A list of active touch-press id values, which 
              can be used with love.touch.getPosition.
        - Arguments: None

------------------------------------------------------------------------------
1.17. video                                                       *love-video*

This module is responsible for decoding, controlling, and streaming video files.

It can't draw the videos, see love.graphics.newVideo and Video objects for that.

- Types: 
    - VideoStream                                           *love-VideoStream*
- Enums: None

------------------------------------------------------------------------------
1.17.1. newVideoStream                             *love-video-newVideoStream*

- Variants:
    - 1:
        - Returns:
            - videostream: <VideoStream> A new VideoStream.
        - Arguments:
            - filename: <string> The file path to the Ogg Theora video file.
    - 2:
        - Returns:
            - videostream: <VideoStream> A new VideoStream.
        - Arguments:
            - file: <File> The File object containing the Ogg Theora video.

------------------------------------------------------------------------------
1.18. window                                                     *love-window*

Provides an interface for modifying and retrieving information about the program's window.

- Types: None
- Enums: 
    - FullscreenType                                     *love-FullscreenType*
    - MessageBoxType                                     *love-MessageBoxType*

------------------------------------------------------------------------------
1.18.1. close                                              *love-window-close*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.18.2. fromPixels                                    *love-window-fromPixels*

- Variants:
    - 1:
        - Returns:
            - value: <number> The converted number, in density-independent 
              units.
        - Arguments:
            - pixelvalue: <number> A number in pixels to convert to 
              density-independent units.
    - 2:
        - Returns:
            - x: <number> The converted x-axis value of the coordinate, in 
              density-independent units.
            - y: <number> The converted y-axis value of the coordinate, in 
              density-independent units.
        - Arguments:
            - px: <number> The x-axis value of a coordinate in pixels.
            - py: <number> The y-axis value of a coordinate in pixels.

------------------------------------------------------------------------------
1.18.3. getDisplayName                            *love-window-getDisplayName*

- Variants:
    - 1:
        - Returns:
            - name: <string> The name of the specified display.
        - Arguments:
            - displayindex: <number> The index of the display to get the name 
              of.

------------------------------------------------------------------------------
1.18.4. getFullscreen                              *love-window-getFullscreen*

- Variants:
    - 1:
        - Returns:
            - fullscreen: <boolean> True if the window is fullscreen, false 
              otherwise.
            - fstype: <FullscreenType> The type of fullscreen mode used.
        - Arguments: None

------------------------------------------------------------------------------
1.18.5. getFullscreenModes                    *love-window-getFullscreenModes*

- Variants:
    - 1:
        - Returns:
            - modes: <table> A table of width/height pairs. (Note that this 
              may not be in order.)
        - Arguments:
            - display: <number> The index of the display, if multiple 
              monitors are available.

------------------------------------------------------------------------------
1.18.6. getIcon                                          *love-window-getIcon*

- Variants:
    - 1:
        - Returns:
            - imagedata: <ImageData> The window icon imagedata, or nil of no 
              icon has been set with love.window.setIcon.
        - Arguments: None

------------------------------------------------------------------------------
1.18.7. getMode                                          *love-window-getMode*

- Variants:
    - 1:
        - Returns:
            - width: <number> Window width.
            - height: <number> Window height.
            - flags: <table> Table containing the window properties.
        - Arguments: None

------------------------------------------------------------------------------
1.18.8. getPixelScale                              *love-window-getPixelScale*

- Variants:
    - 1:
        - Returns:
            - scale: <number> The pixel scale factor associated with the 
              window.
        - Arguments: None

------------------------------------------------------------------------------
1.18.9. getPosition                                  *love-window-getPosition*

- Variants:
    - 1:
        - Returns:
            - x: <number> The x-coordinate of the window's position.
            - y: <number> The y-coordinate of the window's position.
            - display: <number> The index of the display that the window is 
              in.
        - Arguments: None

------------------------------------------------------------------------------
1.18.10. getTitle                                       *love-window-getTitle*

- Variants:
    - 1:
        - Returns:
            - title: <string> The current window title.
        - Arguments: None

------------------------------------------------------------------------------
1.18.11. hasFocus                                       *love-window-hasFocus*

- Variants:
    - 1:
        - Returns:
            - focus: <boolean> True if the window has the focus or false if 
              not.
        - Arguments: None

------------------------------------------------------------------------------
1.18.12. hasMouseFocus                             *love-window-hasMouseFocus*

- Variants:
    - 1:
        - Returns:
            - focus: <boolean> True if the window has mouse focus or false if 
              not.
        - Arguments: None

------------------------------------------------------------------------------
1.18.13. isCreated                                     *love-window-isCreated*

- Variants:
    - 1:
        - Returns:
            - created: <boolean> True if the window has been created, false 
              otherwise.
        - Arguments: None

------------------------------------------------------------------------------
1.18.14. isDisplaySleepEnabled             *love-window-isDisplaySleepEnabled*

- Variants:
    - 1:
        - Returns:
            - enabled: <boolean> True if system display sleep is enabled / 
              allowed, false otherwise.
        - Arguments: None

------------------------------------------------------------------------------
1.18.15. isVisible                                     *love-window-isVisible*

- Variants:
    - 1:
        - Returns:
            - visible: <boolean> True if the window is visible or false if 
              not.
        - Arguments: None

------------------------------------------------------------------------------
1.18.16. maximize                                       *love-window-maximize*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.18.17. minimize                                       *love-window-minimize*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments: None

------------------------------------------------------------------------------
1.18.18. requestAttention                       *love-window-requestAttention*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - continuous: <boolean> Whether to continuously request attention 
              until the window becomes active, or to do it only once.

------------------------------------------------------------------------------
1.18.19. setDisplaySleepEnabled           *love-window-setDisplaySleepEnabled*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - enable: <boolean> True to enable system display sleep, false to 
              disable it.

------------------------------------------------------------------------------
1.18.20. setFullscreen                             *love-window-setFullscreen*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if successful, false otherwise.
        - Arguments:
            - fullscreen: <boolean> Whether to enter or exit fullscreen mode.
    - 2:
        - Returns:
            - success: <boolean> True if successful, false otherwise.
        - Arguments:
            - fullscreen: <boolean> Whether to enter or exit fullscreen mode.
            - fstype: <FullscreenType> The type of fullscreen mode to use.

------------------------------------------------------------------------------
1.18.21. setIcon                                         *love-window-setIcon*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> Whether the icon has been set successfully.
        - Arguments:
            - imagedata: <ImageData> The window icon image.

------------------------------------------------------------------------------
1.18.22. setMode                                         *love-window-setMode*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> True if successful, false otherwise.
        - Arguments:
            - width: <number> Display width.
            - height: <number> Display height.
            - flags: <table> The flags table with the options:

------------------------------------------------------------------------------
1.18.23. setPosition                                 *love-window-setPosition*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - x: <number> The x-coordinate of the window's position.
            - y: <number> The y-coordinate of the window's position.
            - display: <number> The index of the display that the new window 
              position is relative to.

------------------------------------------------------------------------------
1.18.24. setTitle                                       *love-window-setTitle*

- Variants:
    - 1:
        - Returns: Nothing
        - Arguments:
            - title: <string> The new window title.

------------------------------------------------------------------------------
1.18.25. showMessageBox                           *love-window-showMessageBox*

- Variants:
    - 1:
        - Returns:
            - success: <boolean> Whether the message box was successfully 
              displayed.
        - Arguments:
            - title: <string> The title of the message box.
            - message: <string> The text inside the message box.
            - type: <MessageBoxType> The type of the message box.
            - attachtowindow: <boolean> Whether the message box should be 
              attached to the love window or free-floating.
    - 2:
        - Returns:
            - pressedbutton: <number> The index of the button pressed by the 
              user. May be 0 if the message box dialog was closed without pressing a 
              button.
        - Arguments:
            - title: <string> The title of the message box.
            - message: <string> The text inside the message box.
            - buttonlist: <table> A table containing a list of button names 
              to show. The table can also contain the fields enterbutton and escapebutton, 
              which should be the index of the default button to use when the user presses 
              'enter' or 'escape', respectively.
            - type: <MessageBoxType> The type of the message box.
            - attachtowindow: <boolean> Whether the message box should be 
              attached to the love window or free-floating.

------------------------------------------------------------------------------
1.18.26. toPixels                                       *love-window-toPixels*

- Variants:
    - 1:
        - Returns:
            - pixelvalue: <number> The converted number, in pixels.
        - Arguments:
            - value: <number> A number in density-independent units to 
              convert to pixels.
    - 2:
        - Returns:
            - px: <number> The converted x-axis value of the coordinate, in 
              pixels.
            - py: <number> The converted y-axis value of the coordinate, in 
              pixels.
        - Arguments:
            - x: <number> The x-axis value of a coordinate in 
              density-independent units to convert to pixels.
            - y: <number> The y-axis value of a coordinate in 
              density-independent units to convert to pixels.
